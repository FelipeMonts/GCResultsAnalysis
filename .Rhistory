GC.standards[GC.standards$Name == "H50", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(25 , 2500 , 25 ));
GC.standards[GC.standards$Name == "H100", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(100 , 5000 , 50 ));
bwplot(CH4 ~ Name, data = GC.standards ) ;
bwplot(N2O ~ Name, data = GC.standards ) ;
bwplot(CO2 ~ Name, data = GC.standards ) ;
str(GC.standards)
plot(GC.standards$CO2.ppm, GC.standards$CO2  )
range(GC.standards$CO2.ppm )
range(GC.standards$CO2)
range(GC.standards$CO2.ppm )
range(GC.standards$CO2, na.rm = T)
range(GC.standards$CO2)
GC.standards[GC.standards$Name == "0" , ]
range(GC.standards[GC.standards$Name == "0" , c("CO2") ])
plot(GC.standards[GC.standards$Name == "0" , c("CO2") ] , GC.standards[GC.standards$Name == "0" , c("CO2.ppm") ]  )
GC.standards[GC.standards$Name == "0" , c("CO2") ]
GC.standards[GC.standards$Name == "0" , c("CO2.ppm") ]
plot(CO2 ~ CO2.ppm, data = GC.standards)
GC.standards[GC.standards$CO2.ppm == 0 , ]
range(GC.standards[GC.standards$CO2.ppm == 0 , ])
range(GC.standards$CO2, na.rm = T)
GC.standards[GC.standards$CO2.ppm == 0 &  GC.standards$CO2 == 28111.181 ,]
GC.standards[GC.standards$CO2 == 28111.181 ,]
GC.standards[!GC.standards$CO2 == 28111.181 ,]
GC.standards[!GC.standards$CO2 == 28111.181 ,]
range(GC.standards[!GC.standards$CO2 == 28111.181 ,]  )
range(GC.standards[GC.standards$Name == "0" , c("CO2") ], na.rm = T)
range(GC.standards[!GC.standards$CO2 == 28111.181 ,]  )
range(GC.standards[!GC.standards$CO2 == 28111.181 ,] , na.rm = T  )
GC.standards[!GC.standards$CO2 == 28111.181 ,]
range(GC.standards[!GC.standards$CO2 == 28111.181 ,] , na.rm = T  )
is.double(!GC.standards[!GC.standards$CO2 == 28111.181 ,])
is.double(GC.standards[!GC.standards$CO2 == 28111.181 ,])
is.numeric(GC.standards[!GC.standards$CO2 == 28111.181 ,])
which(is.numeric(GC.standards[!GC.standards$CO2 == 28111.181 ,]))
which(is.double(GC.standards[!GC.standards$CO2 == 28111.181 ,]))
which(is.character(GC.standards[!GC.standards$CO2 == 28111.181 ,]))
GC.standards[!GC.standards$CO2 == 28111.181 ,]
str(GC.standards[!GC.standards$CO2 == 28111.181 ,])
GC.standards[GC.standards$CO2 == 28111.181 ,]
range(GC.standards[GC.standards$Name == "0" , c("CO2") ], na.rm = T)
range(GC.standards[GC.standards$CO2.ppm == 0 , ])
range(GC.standards[GC.standards$CO2.ppm == 0 , ] ,na.rm = T)
GC.standards[GC.standards$CO2.ppm == 0 , ]
range(GC.standards[GC.standards$CO2.ppm == 0 , c("CO2")] ,na.rm = T)
plot(CO2 ~ CO2.ppm, data = GC.standards)
plot(GC.standards[GC.standards$Name == "0" , c("CO2") ] , GC.standards[GC.standards$Name == "0" , c("CO2.ppm") ]  )
plot(GC.standards[GC.standards$Name == "0" , c("CO2.ppm") ] , GC.standards[GC.standards$Name == "0" , c("CO2") ]  )
plot(GC.standards[GC.standards$Name == "L25" , c("CO2.ppm") ] , GC.standards[GC.standards$Name == "L25" , c("CO2") ]  )
GC.standards[GC.standards$Name == "L25" , c("CO2") ]
GC.standards[GC.standards$Name == "L25" , c("CO2.ppm") ]
GC.standards[, c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- NA ;
head(GC.standards)
GC.standards[GC.standards$Name == "0", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(0 , 0 , 0 ));
GC.standards[GC.standards$Name == "L25", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(1.25, 125 , 0.25 ));
GC.standards[GC.standards$Name == "L50", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(2.5 , 250 , 0.5 ));
GC.standards[GC.standards$Name == "L100", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(5 , 500 , 1 ));
GC.standards[GC.standards$Name == "H50", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(25 , 2500 , 25 ));
GC.standards[GC.standards$Name == "H100", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(100 , 5000 , 50 ));
bwplot(CH4 ~ Name, data = GC.standards ) ;
bwplot(N2O ~ Name, data = GC.standards ) ;
bwplot(CO2 ~ Name, data = GC.standards ) ;
str(GC.standards)
plot(CO2 ~ CO2.ppm, data = GC.standards)
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Name == "0" ,  ])
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Name == "L25" ,  ])
GC.standards[GC.standards$Name == "L25"  & GC.standards$CO2.ppm <= 1, ]
File.List.directory.path <- "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Felipe2022\\Results" ;
File.List.directory <- list.files(File.List.directory.path); length(File.List.directory) ;
File.List.Sub.directory <- list.files(paste0(File.List.directory.path , "\\" ,File.List.directory [[1]] )); length(File.List.Sub.directory) ;
Summary.directory <- grep("Sum", File.List.Sub.directory, value = T) ;
PeakArea.results <- read.csv(file = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\Analysis\\GCcompiledResults2022.csv" , header = T)
str(PeakArea.results)
PeakArea.results$CH4.Area<-as.double(PeakArea.results$CH4) ;
PeakArea.results$CO2.Area<-as.double(PeakArea.results$CO2) ;
PeakArea.results$N2O.Area<-as.double(PeakArea.results$N2O) ;
str(PeakArea.results)
PeakArea.results$CH4<-as.double(PeakArea.results$CH4) ;
PeakArea.results$CO2<-as.double(PeakArea.results$CO2) ;
PeakArea.results$N2O<-as.double(PeakArea.results$N2O) ;
str(PeakArea.results)
PeakArea.results$CH4<-as.double(PeakArea.results$CH4) ;
PeakArea.results$CO2<-as.double(PeakArea.results$CO2) ;
PeakArea.results$N2O<-as.double(PeakArea.results$N2O) ;
str(PeakArea.results)
GC.standards <- PeakArea.results[grep( pattern = "B" , x = PeakArea.results$Sample.Name, invert = T) ,] ;
GC.Data <-  PeakArea.results[grep( pattern = "B" , x = PeakArea.results$Sample.Name, invert = F) ,] ;
GC.standards$Name <- as.factor(GC.standards$Sample.Name) ;
str(GC.standards)
File.List.directory.path <- "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Felipe2022\\Results" ;
File.List.directory <- list.files(File.List.directory.path); length(File.List.directory) ;
File.List.Sub.directory <- list.files(paste0(File.List.directory.path , "\\" ,File.List.directory [[1]] )); length(File.List.Sub.directory) ;
Summary.directory <- grep("Sum", File.List.Sub.directory, value = T) ;
PeakArea.results.0<-data.frame(Sample.Name = character(), Position = integer() , Vial.number = integer(),
CH4.Area = double(), CO2.Area = double(), N2O.Area = double(), File = character(),
Sampling.Day = character(),  DateOfAnalysis = character(), AnalysisName = character() );
PeakArea.results <- read.csv(file = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\Analysis\\GCcompiledResults2022.csv" , header = T)
str(PeakArea.results)
PeakArea.results$CH4<-as.double(PeakArea.results$CH4) ;
str(PeakArea.results)
GC.standards <- PeakArea.results[grep( pattern = "B" , x = PeakArea.results$Sample.Name, invert = T) ,] ;
str(GC.standards)
GC.standards$Name <- as.factor(GC.standards$Sample.Name) ;
str(GC.standards)
GC.standards$Name <- as.factor(GC.standards$Sample.Name) ;
str(GC.standards)
GC.standards$Factor.Name <- as.factor(GC.standards$Sample.Name) ;
str(GC.standards)
GC.standards[, c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- NA ;
str(GC.standards)
class(NA)
GC.standards[, c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- NaN ;
str(GC.standards)
head(GC.standards)
GC.standards[GC.standards$Name == "0", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(0 , 0 , 0 ));
str(GC.standards)
GC.standards[GC.standards$Name == "L25", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(1.25, 125 , 0.25 ));
GC.standards[GC.standards$Name == "L50", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(2.5 , 250 , 0.5 ));
GC.standards[GC.standards$Name == "L100", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(5 , 500 , 1 ));
GC.standards[GC.standards$Name == "H50", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(25 , 2500 , 25 ));
GC.standards[GC.standards$Name == "H100", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(100 , 5000 , 50 ));
str(GC.standards)
bwplot(CH4 ~ Name, data = GC.standards ) ;
bwplot(N2O ~ Name, data = GC.standards ) ;
bwplot(CO2 ~ Name, data = GC.standards ) ;
str(GC.standards)
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Name == "0" ,  ])
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Name == "L25" ,  ])
GC.standards[GC.standards$Name == "L25" ,  ]
GC.standards$Factor.Name <- as.factor(GC.standards$Sample.Name) ;
str(GC.standards)
GC.standards[GC.standards$Factor.Name == "0", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(0 , 0 , 0 ));
GC.standards[GC.standards$Factor.Name == "L25", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(1.25, 125 , 0.25 ));
GC.standards[GC.standards$Factor.Name == "L50", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(2.5 , 250 , 0.5 ));
GC.standards[GC.standards$Factor.Name == "L100", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(5 , 500 , 1 ));
GC.standards[GC.standards$Name == "H50", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(25 , 2500 , 25 ));
GC.standards[GC.standards$Name == "H100", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(100 , 5000 , 50 ));
GC.standards[GC.standards$Factor.Name == "0", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(0 , 0 , 0 ));
GC.standards[GC.standards$Factor.Name == "L25", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(1.25, 125 , 0.25 ));
GC.standards[GC.standards$Factor.Name == "L50", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(2.5 , 250 , 0.5 ));
GC.standards[GC.standards$Factor.Name == "L100", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(5 , 500 , 1 ));
GC.standards[GC.standards$Factor.Name == "H50", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(25 , 2500 , 25 ));
GC.standards[GC.standards$Factor.Name == "H100", c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- t(c(100 , 5000 , 50 ));
str(GC.standards)
bwplot(CH4 ~ Factor.Name, data = GC.standards ) ;
bwplot(N2O ~ Name, data = GC.standards ) ;
bwplot(CH4 ~ Factor.Name, data = GC.standards ) ;
bwplot(N2O ~ Factor.Nam, data = GC.standards ) ;
bwplot(CO2 ~ Factor.Nam, data = GC.standards ) ;
str(GC.standards)
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "0" ,  ])
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "L25" ,  ])
GC.standards[GC.standards$Factor.Name == "L25" ,  ]
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "L50" ,  ])
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "L100" ,  ])
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "H50" ,  ])
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "H100" ,  ])
GC.standards[, c("CH4.ppm" , "CO2.ppm" , "N2O.ppm")] <- NaN ;
str(GC.standards$Sample.Name)
GC.standards$Factor.Name <- as.factor(GC.standards$Sample.Name) ;
str(GC.standards$Factor.Name)
levels(GC.standards$Factor.Name)
str(GC.standards)
str(GC.standards$Sample.Name)
str(GC.standards$Factor.Name)
levels(GC.standards$Factor.Name)
GC.standards$CH4.ppm <- NaN
GC.standards$CO2.ppm <- NaN
GC.standards$N2O.ppm <- NaN
GC.standards$Factor.Name <- as.factor(GC.standards$Sample.Name) ;
str(GC.standards$Sample.Name)
str(GC.standards$Factor.Name)
levels(GC.standards$Factor.Name)
GC.standards$CH4.ppm <- NaN
GC.standards$CO2.ppm <- NaN
GC.standards$N2O.ppm <- NaN
head(GC.standards);
GC.standards[GC.standards$Sample.Name == 'L100',c('CH4.ppm')] <- 5 ;
GC.standards[GC.standards$Sample.Name == 'L100',c('CO2.ppm')] <- 500 ;
GC.standards[GC.standards$Sample.Name == 'L100',c('N2O.ppm')] <- 1 ;
GC.standards[GC.standards$Sample.Name == 'H100PerSTD',c('CH4.ppm')] <- 50 ;
GC.standards[GC.standards$Sample.Name == '100PerSTD',c('CO2.ppm')] <- 5000 ;
GC.standards[GC.standards$Sample.Name == '100PerSTD',c('N2O.ppm')] <- 50 ;
GC.standards[GC.standards$Sample.Name == 'H100',c('CH4.ppm')] <- 50 ;
GC.standards[GC.standards$Sample.Name == 'H100',c('CO2.ppm')] <- 5000 ;
GC.standards[GC.standards$Sample.Name == 'H100',c('N2O.ppm')] <- 50 ;
GC.standards[GC.standards$Sample.Name == 'L50',c('CH4.ppm')]<-2.5  ;
GC.standards[GC.standards$Sample.Name == 'L50',c('CO2.ppm')]<-250  ;
GC.standards[GC.standards$Sample.Name == 'L50',c('N2O.ppm')]<-0.5  ;
GC.standards[GC.standards$Sample.Name == 'H50',c('CH4.ppm')]<-25 ;
GC.standards[GC.standards$Sample.Name == 'H50',c('CO2.ppm')]<-2500 ;
GC.standards[GC.standards$Sample.Name == 'H50',c('N2O.ppm')]<-25;
GC.standards[GC.standards$Sample.Name == 'L25',c('CH4.ppm')]<-1.25 ;
GC.standards[GC.standards$Sample.Name == 'L25',c('CO2.ppm')]<-125  ;
GC.standards[GC.standards$Sample.Name == 'L25',c('N2O.ppm')]<-0.25  ;
GC.standards[GC.standards$Sample.Name == '0',c('CH4.ppm', 'CO2.ppm', 'N2O.ppm')]<-1e-5 ;
GC.standards[GC.standards$Sample.Name == '0',c('CH4.ppm', 'CO2.ppm', 'N2O.ppm')]<-1e-5  ;
GC.standards[is.na(GC.standards$CO2.ppm),c("Sample.Name")] ;
str(GC.standards)
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "0" ,  ])
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "L25" ,  ])
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "L50" ,  ])
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "L100" ,  ])
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "H50" ,  ])
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "H50" ,  ])
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "H50" ,  ])
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "H100" ,  ])
GC.standards[GC.standards$Name == "L25"  & GC.standards$CO2.ppm <= 1, ]
plot(GC.standards[GC.standards$Name == "0" , c("CO2.ppm") ] , GC.standards[GC.standards$Name == "0" , c("CO2") ]  )
xyplot(N2O~N2O.ppm, data=GC.standards, type="b",main="N2O")
xyplot(N2O~N2O.ppm, data=GC.standards, type="p",main="N2O")
xyplot(CO2.Area~CO2.ppm, data=GC.standards[GC.standards$CO2.Area <= 5000,], type="p",main="CO2")
xyplot(CO2~CO2.ppm, data=GC.standards, type="p",main="CO2")
xyplot(CO2 ~ CO2.ppm, data=GC.standards[GC.standards$CO2 <= 5000,], type="p",main="CO2")
xyplot(CH4 ~ CH4.ppm, data=GC.standards[GC.standards$CH4 <= 100,], type="p",main="CH4")
xyplot(N2O ~ N2O.ppm, data=GC.standards[GC.standards$CH4.Area <= 100,], type="p",main="N2O")
xyplot(CO2 ~ CO2.ppm, data=GC.standards, type="p",main="CO2")
xyplot(CO2 ~ CO2.ppm, data=GC.standards, type="p",main="CO2")
xyplot(CH4 ~ CH4.ppm, data=GC.standards, type="p",main="CH4")
xyplot(N2O ~ N2O.ppm, data=GC.standards, type="p",main="N2O")
xyplot(CO2.Area~CO2.ppm, groups=ANAL.DATE, data=GC.standards, type="b",main="CO2", auto.key = T)
xyplot(CO2 ~ CO2.ppm, groups = GC.Date, data=GC.standards, type="b",main="CO2", auto.key = T)
xyplot(N2O ~ N2O.ppm, groups = GC.Date, data=GC.standards, type="b",main="CO2", auto.key = T)
xyplot(N2O ~ N2O.ppm, groups = GC.Date, data=GC.standards, type="b",main="N2O", auto.key = T)
xyplot(CH4 ~ CH4.ppm, groups = GC.Date, data=GC.standards, type="b",main="CH4", auto.key = T)
xyplot(N2O ~ N2O.ppm, groups = GC.Date, data=GC.standards, type="b",main="N2O", auto.key = T)
str(GC.standards)
range(GC.standards$N2O)
xyplot(CO2 ~ CO2.ppm | GC.Date , data=GC.standards, type="b",main="CO2", auto.key = T)
xyplot(CO2 ~ CO2.ppm | GC.Date , data=GC.standards, type="p",main="CO2", auto.key = T)
xyplot(CO2 ~ CO2.ppm | GC.Date , groups = Position , data=GC.standards, type="p",main="CO2", auto.key = T)
simpleKey(text = GC.standards$Position )
GC.standards$Series <- "None" ;
str(GC.standards)
GC.standards[GC.standards$Position %in% c(1:5), c("Series")] <- 1 ;
head(GC.standards)
GC.standards[GC.standards$Position %in% c(30:34), c("Series")] <- 2 ;
head(GC.standards)
GC.standards[GC.standards$Position %in% c(51:55), c("Series")] <- 3 ;
head(GC.standards)
GC.standards[GC.standards$Position %in% c(80:84), c("Series")] <- 4 ;
GC.standards[GC.standards$Position %in% c(101:105), c("Series")] <- 5 ;
head(GC.standards)
GC.standards$Series <- as.factor(GC.standards$Series) ;
head(GC.standards)
str(GC.standards)
xyplot(CO2 ~ CO2.ppm | GC.Date , groups = Series , data=GC.standards, type="p",main="CO2", auto.key = T) ;
simpleKey(text = GC.standards$Series )
xyplot(CO2 ~ CO2.ppm | GC.Date , groups = Series , data=GC.standards, type="b",main="CO2", auto.key = T) ;
xyplot(CO2 ~ CO2.ppm | GC.Date , groups = Series , data=GC.standards, type="b",main="CO2") ;
xyplot(CO2 ~ CO2.ppm | GC.Date , groups = Series , data=GC.standards, type="b",main="CO2", auto.key = T) ;
xyplot(CO2 ~ CO2.ppm | GC.Date , groups = Series , data=GC.standards, type="b",main="CO2", auto.key = T, col = c("BLACK" , "RED" , "BLUE", "CYAN", "MAGENTA")) ;
par.settings = list(superpose.line = list(lwd=3)) ;
par.settings = list(superpose.line = list(lwd=10)) ;
xyplot(CO2 ~ CO2.ppm | GC.Date , groups = Series , data=GC.standards,
type="b",main="CO2", auto.key = T, col = c("BLACK" , "RED" , "BLUE", "CYAN", "MAGENTA"),  lwd=10);
xyplot(CO2 ~ CO2.ppm | GC.Date , groups = Series , data=GC.standards,
type="b",main="CO2", auto.key = T, col = c("BLACK" , "RED" , "BLUE", "CYAN", "MAGENTA"),  lwd=3);
xyplot(CH4 ~ CH4.ppm | GC.Date , groups = Series , data=GC.standards,
type="b",main="CO2", auto.key = T, col = c("BLACK" , "RED" , "BLUE", "CYAN", "MAGENTA"),  lwd=3);
xyplot(N2O ~ N2O.ppm | GC.Date , groups = Series , data=GC.standards,
type="b",main="CO2", auto.key = T, col = c("BLACK" , "RED" , "BLUE", "CYAN", "MAGENTA"),  lwd=3);
install.packages("quantreg",  dependencies = T)
help(rq)
??rq
example(rq)
library(quantreg)
example(rq)
library(openxlsx)
library(lattice)
library(pdftools)
library(stringr)
library(quantreg)
PeakArea.results <- read.csv(file = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\Analysis\\GCcompiledResults2022.csv" , header = T)
str(PeakArea.results)
# PeakArea.results$CH4<-as.double(PeakArea.results$CH4) ;
#
# PeakArea.results$CO2<-as.double(PeakArea.results$CO2) ;
#
# PeakArea.results$N2O<-as.double(PeakArea.results$N2O) ;
# getting the GC samples with standards together
GC.standards <- PeakArea.results[grep( pattern = "B" , x = PeakArea.results$Sample.Name, invert = T) ,] ;
GC.Data <-  PeakArea.results[grep( pattern = "B" , x = PeakArea.results$Sample.Name, invert = F) ,] ;
str(GC.standards)
### group the data by the different standards
GC.standards$Factor.Name <- as.factor(GC.standards$Sample.Name) ;
str(GC.standards$Sample.Name)
str(GC.standards$Factor.Name)
levels(GC.standards$Factor.Name)
GC.standards$CH4.ppm <- NaN
GC.standards$CO2.ppm <- NaN
GC.standards$N2O.ppm <- NaN
# Values of the standards
# CH4	CO2	N2O
# 0 perSTD	ppm 	uL/Lgas	0	0	0
# L25 perSTDA	ppm 	uL/Lgas	1.25	125	0.25
# L50 perSTDA	ppm 	uL/Lgas	2.5	250	0.5
# L75 perSTDA	ppm 	uL/Lgas	3.75	375	0.75
# L100 perSTDA	ppm 	uL/Lgas	5	500	1
# H50 PerSTD	ppm 	uL/Lgas	25	2500	25
# H100 PerSTD	ppm 	uL/Lgas	100	5000	50
head(GC.standards);
GC.standards[GC.standards$Sample.Name == 'L100',c('CH4.ppm')] <- 5 ;
GC.standards[GC.standards$Sample.Name == 'L100',c('CO2.ppm')] <- 500 ;
GC.standards[GC.standards$Sample.Name == 'L100',c('N2O.ppm')] <- 1 ;
GC.standards[GC.standards$Sample.Name == 'H100',c('CH4.ppm')] <- 50 ;
GC.standards[GC.standards$Sample.Name == 'H100',c('CO2.ppm')] <- 5000 ;
GC.standards[GC.standards$Sample.Name == 'H100',c('N2O.ppm')] <- 50 ;
GC.standards[GC.standards$Sample.Name == 'L50',c('CH4.ppm')]<-2.5  ;
GC.standards[GC.standards$Sample.Name == 'L50',c('CO2.ppm')]<-250  ;
GC.standards[GC.standards$Sample.Name == 'L50',c('N2O.ppm')]<-0.5  ;
GC.standards[GC.standards$Sample.Name == 'H50',c('CH4.ppm')]<-25 ;
GC.standards[GC.standards$Sample.Name == 'H50',c('CO2.ppm')]<-2500 ;
GC.standards[GC.standards$Sample.Name == 'H50',c('N2O.ppm')]<-25;
GC.standards[GC.standards$Sample.Name == '75PerSTDA',c('CH4.ppm')]<-3.75 ;
GC.standards[GC.standards$Sample.Name == '75PerSTDA',c('CO2.ppm')]<-375  ;
GC.standards[GC.standards$Sample.Name == '75PerSTDA',c('N2O.ppm')]<-0.75 ;
GC.standards[GC.standards$Sample.Name == 'L25',c('CH4.ppm')]<-1.25 ;
GC.standards[GC.standards$Sample.Name == 'L25',c('CO2.ppm')]<-125  ;
GC.standards[GC.standards$Sample.Name == 'L25',c('N2O.ppm')]<-0.25  ;
GC.standards[GC.standards$Sample.Name == '0',c('CH4.ppm', 'CO2.ppm', 'N2O.ppm')]<-1e-5 ;
##### Exploring the standards data
str(GC.standards)
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "0" ,  ])
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "L25" ,  ])
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "L50" ,  ])
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "L100" ,  ])
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "H50" ,  ])
plot(CO2 ~ CO2.ppm, data = GC.standards[GC.standards$Factor.Name == "H100" ,  ])
xyplot(N2O~N2O.ppm, data=GC.standards, type="p",main="N2O")
xyplot(CH4.Area~CH4.ppm, data=GC.standards, type="b",main="CH4")
xyplot(CO2 ~ CO2.ppm, data=GC.standards, type="p",main="CO2")
xyplot(CH4 ~ CH4.ppm, data=GC.standards, type="p",main="CH4")
xyplot(N2O ~ N2O.ppm, data=GC.standards, type="p",main="N2O")
GC.standards$ANAL.DATE<-as.factor(GC.standards$DateOfAnalysis)  ;
xyplot(CO2 ~ CO2.ppm, groups = GC.Date, data=GC.standards, type="b",main="CO2", auto.key = T)
xyplot(CO2 ~ CO2.ppm | GC.Date , groups = Position , data=GC.standards, type="p",main="CO2", auto.key = T)
simpleKey(text = GC.standards$Position )
GC.standards$Series <- "None" ;
GC.standards[GC.standards$Position %in% c(1:5), c("Series")] <- 1 ;
GC.standards[GC.standards$Position %in% c(30:34), c("Series")] <- 2 ;
GC.standards[GC.standards$Position %in% c(51:55), c("Series")] <- 3 ;
GC.standards[GC.standards$Position %in% c(80:84), c("Series")] <- 4 ;
head(GC.standards)
GC.standards$Series <- as.factor(GC.standards$Series) ;
str(GC.standards)
xyplot(CO2 ~ CO2.ppm | GC.Date , groups = Series , data=GC.standards,
type="b",main="CO2", auto.key = T, col = c("BLACK" , "RED" , "BLUE", "CYAN", "MAGENTA"),  lwd=3);
xyplot(CH4 ~ CH4.ppm | GC.Date , groups = Series , data=GC.standards,
type="b",main="CO2", auto.key = T, col = c("BLACK" , "RED" , "BLUE", "CYAN", "MAGENTA"),  lwd=3);
xyplot(N2O ~ N2O.ppm | GC.Date , groups = Series , data=GC.standards,
type="b",main="CO2", auto.key = T, col = c("BLACK" , "RED" , "BLUE", "CYAN", "MAGENTA"),  lwd=3);
xyplot(CO2 ~ CO2.ppm | GC.Date , groups = Series , data=GC.standards,
type="b",main="CO2", auto.key = T, col = c("BLACK" , "RED" , "BLUE", "CYAN", "MAGENTA"),  lwd=3);
xyplot(CH4 ~ CH4.ppm | GC.Date , groups = Series , data=GC.standards,
type="b",main="CH4", auto.key = T, col = c("BLACK" , "RED" , "BLUE", "CYAN", "MAGENTA"),  lwd=3);
xyplot(N2O ~ N2O.ppm | GC.Date , groups = Series , data=GC.standards,
type="b",main="N2O", auto.key = T, col = c("BLACK" , "RED" , "BLUE", "CYAN", "MAGENTA"),  lwd=3);
xyplot(N2O ~ N2O.ppm, groups = GC.Date, data=GC.standards, type="b",main="N2O", auto.key = T)
xyplot(CH4 ~ CH4.ppm, groups = GC.Date, data=GC.standards, type="b",main="CH4", auto.key = T)
xyplot(CO2.Area~CO2.ppm, groups=ANAL.DATE, data=GC.standards, type="b",main="CO2", auto.key = T, xlim = c(0,1000), ylim= c(0, 5000))
xyplot(CO2.Area~CO2.ppm |ANAL.DATE , data=GC.standards, type="b",main="CO2")
xyplot(N2O.Area~N2O.ppm, groups=ANAL.DATE, data=GC.standards, type="b",main="N2O", auto.key = T)
xyplot(N2O.Area~N2O.ppm, groups=ANAL.DATE, data=GC.standards, type="b",main="N2O", auto.key = T,xlim = c(0,10), ylim= c(0, 2000))
###############################################################################################################
#                             Tell the program where the package libraries are stored
###############################################################################################################
.libPaths("C:\\Users\\frm10\\AppData\\Local\\R\\win-library\\4.2")  ;
###############################################################################################################
#                            Install the packages that are needed
###############################################################################################################
# install.packages("openxlsx",  dependencies = T)
# install.packages("Rtools",  dependencies = T)
# install.packages("pdftools",  dependencies = T)
# install.packages("askpass",  dependencies = T)
# install.packages("cli",  dependencies = T)
# install.packages("utf8",  dependencies = T)
# install.packages("quantreg",  dependencies = T)
###############################################################################################################
#                           load the libraries that are needed
###############################################################################################################
library(quantreg)
example(rq)
data(stackloss)
View(stackloss)
View(stackloss)
data(engel)
fit1 <- rq(foodexp ~ income, tau = .5, data = engel)
xx <- income - mean(income)
xx <- income - mean(income)
fit1 <- summary(rq(foodexp~xx,tau=2:98/100))
fit2 <- summary(rq(foodexp~xx,tau=c(.05, .25, .5, .75, .95)))
pdf("engelcoef.pdf",width=6.5,height=3.5)
plot(fit1,mfrow = c(1,2))
dev.off()
plot(fit1,mfrow = c(1,2))
getwd()
latex(fit2, caption="Engel's Law", transpose=TRUE)
fit1 <- rq(foodexp ~ income, tau = .5, data = engel)
attach(engel)
plot(income,foodexp,cex=.25,type="n",xlab="Household Income", ylab="Food Expenditure")
points(income,foodexp,cex=.5,col="blue")
abline(rq(foodexp~income,tau=.5),col="blue")
bline(rq(foodexp~income,tau=.5),col="blue")
abline(rq(foodexp~income,tau=.5),col="blue")
abline(lm(foodexp~income),lty=2,col="red") #the dreaded ols line
taus <- c(.05,.1,.25,.75,.90,.95)
for( i in 1:length(taus)){
+ abline(rq(foodexp~income,tau=taus[i]),col="gray")
}
taus <- c(.05,.1,.25,.75,.90,.95)
for( i in 1:length(taus)){
+ abline(rq(foodexp~income,tau=taus[i]),col="gray")
}
1:length(taus)
for( i in 1:length(taus)){
abline(rq(foodexp~income,tau=taus[i]),col="gray")
}
z <- rq(foodexp~income,tau=-1)
points(income,foodexp,cex=.5,col="blue")
plot(z)
plot.rq.process(z)
plot.rq.process(z)
dev.new()
plot.rq.process(z)
plot.rq.process(z$sol)
###############################################################################################################
#
#  Calculation of flux rates based on the paper:
#
# Pedersen, A. R., S. O. Petersen, and K. Schelde. “A Comprehensive Approach to Soil-Atmosphere Trace-Gas Flux
#
# Estimation with Static Chambers.” European Journal of Soil Science 61, no. 6 (2010): 888–902.
#
# https://doi.org/10.1111/j.1365-2389.2010.01291.x.
#
#
# and the r package :
#
# Pedersen, Asger R. “HMR: Flux Estimation with Static Chamber Data,” May 20, 2020. https://CRAN.R-project.org/package=HMR.
#
#
#  The code in the package only uses "," or ";" separated values read from a text file as inputs. This version will read
#
#   the input from data frame and do the calculations all with in R without any external code in C or C++
#
#   which allows to study the fitted model thoroughly.
#
#
#############################################################################################################
###############################################################################################################
#                            Install the packages that are needed
###############################################################################################################
# install.packages("HMR",  dependencies = T)
# install.packages("nlstools",  dependencies = T)
# install.packages("nls2",  dependencies = T)
###############################################################################################################
#                           load the libraries that are needed
###############################################################################################################
library(HMR)
library(nlstools)
library(nls2)
###############################################################################################################
# readClipboard()
###############################################################################################################
#                             Setting up working directory  Loading Packages and Setting up working directory
###############################################################################################################
#      set the working directory
# readClipboard()
setwd(paste0("D:\\Felipe\\Current_Projects\\CCC Based Experiments\\" ,
"StrategicTillage_NitrogenLosses_OrganicCoverCrops\\DataAnalysis\\RCode\\GCResultsAnalysis\\"))
getwd()
###############################################################################################################
#                           load the working data from GCANalysis
###############################################################################################################
load("GCAnalysis2022.RData")
Flux.Data.Corrected <- read.csv(file = "Flux_Data_Corrected.csv" , as.is = T )
Flux.Data <- read.csv(file = "Flux_Data.csv" , as.is = T )
Unique.Rows.Flux <- as.numeric(row.names(unique(Flux.Data.Corrected[, c( "Sampling.Day" , "BLOCK" , "CoverCrop" , "Treatment.F")])))
names(Flux.Data.Corrected)
Concentration.Flux.Data <- Flux.Data.Corrected[Unique.Rows.Flux,
c("Sampling.Date" , "GC.Date" , "Treatment.F" , "BLOCK.F" , "CoverCrop.F" ,
"f0" , "f0.se" , "f0.p" , "f0.lo95" , "f0.up95" , "Method" , "Warning",
"Prefilter" , "Prefilter.p" , "LR.f0" , "LR.f0.se" , "LR.f0.p" ,
"LR.f0.lo95" , "LR.f0.up95", "Rev.Prefilter.p" , "Rev.LR.f0")]
str(Concentration.Flux.Data)
write.csv( x = Concentration.Flux.Data , file = "Concentration.Flux.Data.csv")
setwd(paste0("D:\\Felipe\\Current_Projects\\CCC Based Experiments\\" ,
"StrategicTillage_NitrogenLosses_OrganicCoverCrops\\DataAnalysis\\RCode\\GCResultsAnalysis\\"))
getwd()
read.csv( file = "Concentration.Flux.Data.csv" )
Concentration.Flux.Data <- read.csv( file = "Concentration.Flux.Data.csv" ) ;
str(Concentration.Flux.Data)
60*24
1440 * 365
Concentration.Flux.Data$Temp.K <- 293.15 ;
Patm = 101325
R = 8.31446261815324
Concentration.Flux.Data$F.mol.min <- Concentration.Flux.Data$f0 * Patm / (R * Concentration.Flux.Data$Temp.K) ;
Concentration.Flux.Data$F.Kg.Ha.day <- Concentration.Flux.Data$F.mol.min * 44.0095 * 1440 * 10000 / 1000 ;
Concentration.Flux.Data$F.Kg.Ha.day
Concentration.Flux.Data$F.KgElement.Ha.day <- Concentration.Flux.Data$F.mol.min * 44.0095 * 1440 * 10000 / 1000 ;
Concentration.Flux.Data$F.Kgsubstance.Ha.day <- Concentration.Flux.Data$F.mol.min * 12.0107 * 1440 * 10000 / 1000 ;
Concentration.Flux.Data$F.KgElement.Ha.day
str(Concentration.Flux.Data)
1e6
Concentration.Flux.Data$F.mol.min <- Concentration.Flux.Data$f0 * Patm / (R * Concentration.Flux.Data$Temp.K *1e6) ;
Concentration.Flux.Data$F.KgElement.Ha.day <- Concentration.Flux.Data$F.mol.min * 44.0095 * 1440 * 10000 / 1000 ;
Concentration.Flux.Data$F.Kgsubstance.Ha.day <- Concentration.Flux.Data$F.mol.min * 12.0107 * 1440 * 10000 / 1000 ;
Concentration.Flux.Data$F.KgElement.Ha.day
Concentration.Flux.Data$F.Kgsubstance.Ha.day <- Concentration.Flux.Data$F.mol.min * 12.0107 * 1440 * 10000 / 1000 ;
Concentration.Flux.Data$F.Kgsubstance.Ha.day
