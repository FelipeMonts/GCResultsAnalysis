#names(PeakArea.results.1)<-c('Sample.Name' , 'Vial.number' , 'CH4.Area' , 'CO2.Area', 'N2O.Area' );
PeakArea.results.1$AnalysisName<-PDF.Results.Files[[i]] ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
# Delete objects and files that are not longer needed
rm(PeakArea.results.1)
}
PDF.Results.Files[[i]]
for (i in seq(44,length(Excel.Results.Files))) {
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = PDF.Results.Files[i])
#names(PeakArea.results.1)<-c('Sample.Name' , 'Vial.number' , 'CH4.Area' , 'CO2.Area', 'N2O.Area' );
PeakArea.results.1$AnalysisName<-PDF.Results.Files[[i]] ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
# Delete objects and files that are not longer needed
rm(PeakArea.results.1)
}
PDF.Results.Files[[i]]
for (i in seq(45,length(Excel.Results.Files))) {
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = PDF.Results.Files[i])
#names(PeakArea.results.1)<-c('Sample.Name' , 'Vial.number' , 'CH4.Area' , 'CO2.Area', 'N2O.Area' );
PeakArea.results.1$AnalysisName<-PDF.Results.Files[[i]] ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
# Delete objects and files that are not longer needed
rm(PeakArea.results.1)
}
PDF.Results.Files[[i]]
for (i in seq(41,length(Excel.Results.Files))) {
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = PDF.Results.Files[i])
#names(PeakArea.results.1)<-c('Sample.Name' , 'Vial.number' , 'CH4.Area' , 'CO2.Area', 'N2O.Area' );
PeakArea.results.1$AnalysisName<-PDF.Results.Files[[i]] ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
# Delete objects and files that are not longer needed
rm(PeakArea.results.1)
}
for (i in seq(42,length(Excel.Results.Files))) {
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = PDF.Results.Files[i])
#names(PeakArea.results.1)<-c('Sample.Name' , 'Vial.number' , 'CH4.Area' , 'CO2.Area', 'N2O.Area' );
PeakArea.results.1$AnalysisName<-PDF.Results.Files[[i]] ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
# Delete objects and files that are not longer needed
rm(PeakArea.results.1)
}
i
PDF.Results.Files[[i]]
for (i in seq(42,length(Excel.Results.Files))) {
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = PDF.Results.Files[i])
#names(PeakArea.results.1)<-c('Sample.Name' , 'Vial.number' , 'CH4.Area' , 'CO2.Area', 'N2O.Area' );
PeakArea.results.1$AnalysisName<-PDF.Results.Files[[i]] ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
# Delete objects and files that are not longer needed
rm(PeakArea.results.1)
}
##############################################################################################################
#
#
# Program to Analyze and plot GC data collected from Professor Lauren McPhillips Agilent 8890 Gas Chromatograph
#
#     This program is focused on analyzing standards for calibration
#
#
#  Felipe Montes 2022/08/23
#
#
#
#
###############################################################################################################
###############################################################################################################
#                             Tell the program where the package libraries are stored
###############################################################################################################
.libPaths("C:\\Users\\frm10\\AppData\\Local\\R\\win-library\\4.2")  ;
###############################################################################################################
#                            Install the packages that are needed
###############################################################################################################
# install.packages("openxlsx",  dependencies = T)
# install.packages("Rtools",  dependencies = T)
# install.packages("pdftools",  dependencies = T)
# install.packages("askpass",  dependencies = T)
# install.packages("cli",  dependencies = T)
# install.packages("utf8",  dependencies = T)
###############################################################################################################
#                           load the libraries that are needed
###############################################################################################################
library(openxlsx)
library(lattice)
library(pdftools)
library(stringr)
###############################################################################################################
#                             Setting up working directory  Loading Packages and Setting up working directory
###############################################################################################################
#      set the working directory
# readClipboard()
# setwd("D:\\Felipe\\CCC Based Experiments\\StrategicTillage_NitrogenLosses_OrganicCoverCrops\\Data\\GasChromatograph")
###############################################################################################################
#                           Explore the files and directory and files with the data
###############################################################################################################
### Read the Directories where the GC data are stored
File.List.directory<-"C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results" ;
File.List<-list.files("C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"); length(File.List) ;
# Only select the pdf files
PDF.Results.Files <- File.List[grep(".pdf", File.List)] ;
Excel.Results.Files <-File.List[grep(".xlsx", File.List)] ;
PeakArea.results.0<-data.frame(Sample.Name = character(), Position = integer() , Vial.number = integer(),
CH4.Area = double(), CO2.Area = double(), N2O.Area = double(), File = character(),
Sampling.Day = character(),  DateOfAnalysis = character(), AnalysisName = character() );
GCPDF.File = paste0(File.List.directory,"\\",PDF.Results.Files[1])
for (i in seq(42,length(Excel.Results.Files))) {
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = PDF.Results.Files[i])
#names(PeakArea.results.1)<-c('Sample.Name' , 'Vial.number' , 'CH4.Area' , 'CO2.Area', 'N2O.Area' );
PeakArea.results.1$AnalysisName<-PDF.Results.Files[[i]] ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
# Delete objects and files that are not longer needed
rm(PeakArea.results.1)
}
##############################################################################################################
#
# Function to read the results of the gas chromatograph from the PDF reports saved after analyzing the results.
#
#    Felipe Montes 2022/10/13
#
#    Rev 2023/07/17
#
#
#
#
#
###############################################################################################################
###############################################################################################################
#                             Tell the program where the package libraries are stored
###############################################################################################################
#
#
#
# #  Tell the program where the package libraries are  #####################
#
# .libPaths("C:\\Users\\frm10\\AppData\\Local\\R\\win-library\\4.2")  ;
###############################################################################################################
#                            Install the packages that are needed
###############################################################################################################
# install.packages("openxlsx",  dependencies = T)
# install.packages("Rtools",  dependencies = T)
# install.packages("pdftools",  dependencies = T)
# install.packages("askpass",  dependencies = T)
# install.packages("cli",  dependencies = T)
# install.packages("utf8",  dependencies = T)
###############################################################################################################
#                           load the libraries that are needed
###############################################################################################################
library(openxlsx)
library(lattice)
library(pdftools)
library(stringr)
###############################################################################################################
#                             Setting up working directory
###############################################################################################################
#      set the working directory
# readClipboard() ;
# setwd("D:\\Felipe\\CCC Based Experiments\\StrategicTillage_NitrogenLosses_OrganicCoverCrops\\Data\\GasChromatograph")
###############################################################################################################
#                           Start Code
###############################################################################################################
###############################################################################################################
#
# Inputs required by the function
#
#  1-> GCPDF.File.path = path to the file containing the Gas Chromatograph analysis report in pdf format
#
#  in the code below GCPDF.File=paste0(File.List.directory,"\\",PDF.Results.Files[1])
#
#    GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
#
#  2-> GCPDF.File.name= Name of the Gas Cromatograph analysis report in pdf format
#
#
#    GCPDF.File.name="20210929B1B2peakareas1.pdf"
#
#
#
###############################################################################################################
ReadGCReportPDF2021<-function(GCPDF.File.path, GCPDF.File.name ){
# read the pdf file as a text
# Report.PDF.1<-pdf_text(pdf=paste0(File.List.directory,"\\",PDF.Results.Files[1])) ;
Report.PDF.1<-pdf_text(pdf=paste0(GCPDF.File.path,"\\",GCPDF.File.name)) ;
# str(Report.PDF.1)
# separate each page and each line using strsplit() and "\n" as the separation pattern
Report.PDF.2<-strsplit(x=Report.PDF.1,split="\n") ;
# str(Report.PDF.2)
# get the data from the list starting with page 1 [[1]]
Report.PDF.2[[1]] ;   str(Report.PDF.2[[1]]) ;
# get all the pages in one long character vector Report.PDF.3 by unlisting the list produced by Report.PDF.2
Report.PDF.3<-unlist(Report.PDF.2);
# remove all the blank components of the vector
# remove all the blank components of the vector
### in reg exp ^ means start of a string, and $ means end of a string. Subsequently, ^$ means empty or ""
# grep(pattern="^$",x=Report.PDF.3)
#
# grep(pattern="^$",x=Report.PDF.3, value=T)
#
# grep(pattern="^$",x=Report.PDF.3, value=T, invert=T)
Report.PDF.4<-grep(pattern="^$",x=Report.PDF.3, value=T, invert=T) ;
## Remove lines of the report that do not contain data
print(Report.PDF.4[1:4])
# [1] "Sequence Summary Report"
# [2] "                                   CH4            CO2            N2O"
# [3] "                                   Peak Area      Peak Area      Peak Area"
# [4] " 0PerSTD                 1    1    4.071          781.033        149.931"
#
Report.PDF.5<-grep(pattern="Koehle*|Sequence|CH4|Peak", x=Report.PDF.4, value=T, invert=T)
# # use  str_squish from the package stringr to get rid of the spaces between characters
#
# str_squish(Report.PDF.5[1])
#
#
# strsplit(str_squish(Report.PDF.5[1]), " ")[1]
#
#
# str(unlist(strsplit(str_squish(Report.PDF.5[1]), " ")[1]))
# # or even better  use strsplit to remove the the spaces between characters in character vectors
#
# strsplit(x=Report.PDF.5[1], split=c(" ", ""))
#
# strsplit(x=Report.PDF.5[5], split=c(" ", ""))
#
# str(strsplit(x=Report.PDF.5[80], split=c(" ", "")))
# even better
# strsplit(x=Report.PDF.5, split=c(" "))
Report.PDF.6<-strsplit(x=Report.PDF.5, split=c(" ")) ;
# str(Report.PDF.6) ; head(Report.PDF.6,3 )
### in regular  expressions "^" means start of a string, and $ means end of a string. Subsequently, ^$ means empty or ""
# grep(pattern="^$",x=Report.PDF.6[[1]])
#
# grep(pattern="^$",x=Report.PDF.6[[1]], value=T)
#
# grep(pattern="^$",x=Report.PDF.6[[1]], value=T, invert=T)
#
# ### using sapply to apply the grep function to all the elements in the Report.PDF.6 list
#
# lapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T))
#
# lapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T))[[1]]
#
# sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T))
#
# str(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))
#
# t(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))
Report.PDF.7<-data.frame(t(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))) ;
Report.PDF.7<-data.frame(t(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))) ;
# Names of the pdf report columns c("Sample", "Position", "Vial", "CH4" , "CO2" , "N2O" )
names(Report.PDF.7)<-c("Sample.Name", "Position" , "Vial", "CH4" , "CO2" , "N2O" );
# head(Report.PDF.7)
######################### Add the sampling date and the processing date ####################
Report.PDF.7$File<-GCPDF.File.name ;
# head(Report.PDF.7)
### Get the sampling date from the file name
# head(Report.PDF.7$File)
# strsplit(x=Report.PDF.7$File, split=c("pea")) [[1]]
#  Testing and building this complex call based on sapply, strsplit and regmatches
# XXXX<-sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)
#
# regmatches(XXXX, regexpr("[[:digit:]]+",XXXX))
# regmatches(sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1),
#            regexpr("[[:digit:]]+",sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)));
#
Report.PDF.7$Sampling.Day<-regmatches(sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1),
regexpr("[[:digit:]]+",sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)));
Report.PDF.7$Sampling.Date<-as.Date(Report.PDF.7$Sampling.Day, format="%Y%M%d");
###### Get the Gas Chromatograph processing date
# grep(pattern="Koehle*", x=Report.PDF.4, value=T)[[1]]
#
# Report.PDF.DateLine<-strsplit(x=grep(pattern="Koehle*", x=Report.PDF.4, value=T)[[1]], split=c(" ", ""))[[1]] ;
#
# as.Date(Report.PDF.DateLine, format="%Y-%m-%d" )
#
# is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))
#
# !is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))
#
# Report.PDF.DateLine[!is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))]
#
# as.Date(Report.PDF.DateLine[!is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))])
Report.PDF.DateLine<-strsplit(x=grep(pattern="Koehle*", x=Report.PDF.4, value=T)[[1]], split=c(" ", ""))[[1]] ;
Report.PDF.7$GC.Date<-as.Date(Report.PDF.DateLine[!is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))]);
# remove all the intermediary objects that were used during the execution of the program
# ls() objects() ls()[!ls() %in% c("Report.PDF.7", "GCPDF.File.name" ,"GCPDF.File.path")]
#  rm(list=ls()[!ls() %in% c("Report.PDF.7", "GCPDF.File.name" ,"GCPDF.File.path")])
print(head(Report.PDF.7))
return(Report.PDF.7)
}
for (i in seq(42,length(Excel.Results.Files))) {
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = PDF.Results.Files[i])
#names(PeakArea.results.1)<-c('Sample.Name' , 'Vial.number' , 'CH4.Area' , 'CO2.Area', 'N2O.Area' );
PeakArea.results.1$AnalysisName<-PDF.Results.Files[[i]] ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
# Delete objects and files that are not longer needed
rm(PeakArea.results.1)
}
i
PeakArea.results.0<-data.frame(Sample.Name = character(), Position = integer() , Vial.number = integer(),
CH4.Area = double(), CO2.Area = double(), N2O.Area = double(), File = character(),
Sampling.Day = character(),  DateOfAnalysis = character(), AnalysisName = character() );
for (i in seq(1,length(Excel.Results.Files))) {
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = PDF.Results.Files[i])
#names(PeakArea.results.1)<-c('Sample.Name' , 'Vial.number' , 'CH4.Area' , 'CO2.Area', 'N2O.Area' );
PeakArea.results.1$AnalysisName<-PDF.Results.Files[[i]] ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
# Delete objects and files that are not longer needed
rm(PeakArea.results.1)
}
i
for (i in seq(42,length(Excel.Results.Files))) {
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = PDF.Results.Files[i])
#names(PeakArea.results.1)<-c('Sample.Name' , 'Vial.number' , 'CH4.Area' , 'CO2.Area', 'N2O.Area' );
PeakArea.results.1$AnalysisName<-PDF.Results.Files[[i]] ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
# Delete objects and files that are not longer needed
rm(PeakArea.results.1)
}
i
Report.pdf.info<-pdf_info(pdf=paste0(File.List.directory,"\\",PDF.Results.Files[1]))  ;
print(Report.pdf.info)
Report.pdf.info$pages
Report.PDF.1<-pdf_text(pdf=paste0(File.List.directory,"\\",PDF.Results.Files[1])) ;
str(Report.PDF.1)
Report.PDF.2<-strsplit(x=Report.PDF.1,split="\n") ;
str(Report.PDF.2)
Report.PDF.2[[1]] ;   str(Report.PDF.2[[1]]) ;
Report.PDF.3<-unlist(Report.PDF.2);
grep(pattern="^$",x=Report.PDF.3)
grep(pattern="^$",x=Report.PDF.3, value=T)
grep(pattern="^$",x=Report.PDF.3, value=T, invert=T)
Report.PDF.4<-grep(pattern="^$",x=Report.PDF.3, value=T, invert=T) ;
print(Report.PDF.4[1:4])
Report.PDF.5<-grep(pattern="Koehle*|Sequence|CH4|Peak", x=Report.PDF.4, value=T, invert=T)
str_squish(Report.PDF.5[1])
strsplit(str_squish(Report.PDF.5[1]), " ")[1]
str(unlist(strsplit(str_squish(Report.PDF.5[1]), " ")[1]))
strsplit(x=Report.PDF.5[1], split=c(" ", ""))
strsplit(x=Report.PDF.5[5], split=c(" ", ""))
str(strsplit(x=Report.PDF.5[80], split=c(" ", "")))
PeakArea.results <- read.csv(file = "D:\\Felipe\\Current_Projects\\CCC Based Experiments\\StrategicTillage_NitrogenLosses_OrganicCoverCrops\\DataAnalysis\\RCode\\GCResultsAnalysis\\FluxDataAnalysisResults\\GCcompiledResults2022.csv" , header = T)
str(PeakArea.results.0)
.libPaths("C:\\Users\\frm10\\AppData\\Local\\R\\win-library\\4.2")  ;
library(openxlsx)
library(lattice)
library(pdftools)
library(stringr)
library(quantreg)
library(HMR)
setwd("D:\\Felipe\\Current_Projects\\CCC Based Experiments\\StrategicTillage_NitrogenLosses_OrganicCoverCrops\\DataAnalysis\\RCode\\GCResultsAnalysis")
Year = 2021
paste0(Gas, "Flux" , Year, ".csv")
##############################################################################################################
#
#
#   Statistical Analisys of Soil Gas Flux Measurements From Tthe Strategic Tillage Experiment
#
#
#                              Felipe Montes 09/80/2023
#
#
#
###############################################################################################################
###############################################################################################################
#                             Tell the program where the package libraries are stored
###############################################################################################################
.libPaths("C:\\Users\\frm10\\AppData\\Local\\R\\win-library\\4.2")  ;
###############################################################################################################
#                            Install the packages that are needed
###############################################################################################################
# install.packages("openxlsx",  dependencies = T)
# install.packages("Rtools",  dependencies = T)
# install.packages("pdftools",  dependencies = T)
# install.packages("askpass",  dependencies = T)
# install.packages("cli",  dependencies = T)
# install.packages("utf8",  dependencies = T)
# install.packages("quantreg",  dependencies = T)
# install.packages("HMR",  dependencies = T)
###############################################################################################################
#                           load the libraries that are needed
###############################################################################################################
library(openxlsx)
library(lattice)
library(pdftools)
library(stringr)
library(quantreg)
library(HMR)
###############################################################################################################
#                             Setting up working directory  Loading Packages and Setting up working directory
###############################################################################################################
#      set the working directory
# readClipboard()
setwd("D:\\Felipe\\Current_Projects\\CCC Based Experiments\\StrategicTillage_NitrogenLosses_OrganicCoverCrops\\DataAnalysis\\RCode\\GCResultsAnalysis")
###############################################################################################################
#                           Select the N2O Sampling year
###############################################################################################################
Year = 2021
# Year = 2022
###############################################################################################################
#                           Select the Gas
###############################################################################################################
# Gas = "CO2"
#
Gas = "N2O"
#
# Gas = "CH4"
paste0(Gas, "Flux" , Year, ".csv")
paste0(Gas, ".Flux." , Year)
read.csv(read.csv(file = paste0("FluxDataAnalysisResults\\" , Gas, "_Mass.Flux.Data_" , Year, ".csv")))
paste0("FluxDataAnalysisResults\\" , Gas, "_Mass.Flux.Data_" , Year, ".csv")
read.csv(file = paste0("FluxDataAnalysisResults\\" , Gas, "_Mass.Flux.Data_" , Year, ".csv"))
assign(read.csv(file = paste0("FluxDataAnalysisResults\\" , Gas, "_Mass.Flux.Data_" , Year, ".csv")), paste0(Gas, ".Flux." , Year))
assign(x = paste0(Gas, ".Flux." , Year) , value = read.csv(file = paste0("FluxDataAnalysisResults\\" , Gas, "_Mass.Flux.Data_" , Year, ".csv")), paste0(Gas, ".Flux." , Year))
paste0(Gas, ".Flux." , Year)
paste0(Gas, ".Flux." , Year)
read.csv(file = paste0("FluxDataAnalysisResults\\" , Gas, "_Mass.Flux.Data_" , Year, ".csv"))
assign(x = paste0(Gas, ".Flux." , Year) , value = read.csv(file = paste0("FluxDataAnalysisResults\\" , Gas, "_Mass.Flux.Data_" , Year, ".csv")))
paste0(Gas, ".Flux." , Year)
str(N2O.Flux.2021)
head(N2O.Flux.2021)
N2O.Flux.2021[N2O.Flux.2021$Warning == "Data error" ,]
N2O.Flux.2021[N2O.Flux.2021$Warning == "Data error" , c("Sampling.Date" , "f0" , "LR.f0" , "Rev.LR.f0"  , "F.KgElement.Ha.day")]
Concentration.Flux.Data$f0.mol.min <- Concentration.Flux.Data$f0 * Patm / (R * Concentration.Flux.Data$Temp.K *1e6) ;
Concentration.Flux.Data$LR.f0.mol.min <- Concentration.Flux.Data$LR.f0 * Patm / (R * Concentration.Flux.Data$Temp.K *1e6) ;
Concentration.Flux.Data <- read.csv(file = paste0("FluxDataAnalysisResults\\" , Gas, "_Mass.Flux.Data_" , Year, ".csv"), row.names = F)
Concentration.Flux.Data <- read.csv(file = paste0("FluxDataAnalysisResults\\" , Gas, "_Mass.Flux.Data_" , Year, ".csv"), rownames = F)
Concentration.Flux.Data <- read.csv(file = paste0("FluxDataAnalysisResults\\" , Gas, "_Mass.Flux.Data_" , Year, ".csv"), row.names = F)
Concentration.Flux.Data <- read.csv(file = paste0("FluxDataAnalysisResults\\" , Gas, "_Mass.Flux.Data_" , Year, ".csv"))
Concentration.Flux.Data$Temp.K <- 293.15 ;
Concentration.Flux.Data$f0.mol.min <- Concentration.Flux.Data$f0 * Patm / (R * Concentration.Flux.Data$Temp.K *1e6) ;
Concentration.Flux.Data$LR.f0.mol.min <- Concentration.Flux.Data$LR.f0 * Patm / (R * Concentration.Flux.Data$Temp.K *1e6) ;
Patm = 101325
Concentration.Flux.Data$f0.mol.min <- Concentration.Flux.Data$f0 * Patm / (R * Concentration.Flux.Data$Temp.K *1e6) ;
R = 8.31446261815324
Patm = 101325
Concentration.Flux.Data$Temp.K <- 293.15 ;
Concentration.Flux.Data$f0.mol.min <- Concentration.Flux.Data$f0 * Patm / (R * Concentration.Flux.Data$Temp.K *1e6) ;
Concentration.Flux.Data$LR.f0.mol.min <- Concentration.Flux.Data$LR.f0 * Patm / (R * Concentration.Flux.Data$Temp.K *1e6) ;
str(Concentration.Flux.Data)
Concentration.Flux.Data[Concentration.Flux.Data$Warning = "Data error" , c("LR.f0.mol.min")] <- Concentration.Flux.Data$Rev.LR.f0 * Patm / (R * Concentration.Flux.Data$Temp.K *1e6) ;
Concentration.Flux.Data[Concentration.Flux.Data$Warning == "Data error" , c("LR.f0.mol.min")] <- Concentration.Flux.Data$Rev.LR.f0 * Patm / (R * Concentration.Flux.Data$Temp.K *1e6) ;
Concentration.Flux.Data[Concentration.Flux.Data$Warning == "Data error" , c("LR.f0.mol.min")] <-
Concentration.Flux.Data[Concentration.Flux.Data$Warning == "Data error" , c("Rev.LR.f0")]  * Patm / (R * Concentration.Flux.Data$Temp.K *1e6) ;
Concentration.Flux.Data[Concentration.Flux.Data$Warning == "Data error" , c("LR.f0.mol.min")]
Concentration.Flux.Data[Concentration.Flux.Data$Warning == "Data error" , c("Rev.LR.f0")]
Concentration.Flux.Data[Concentration.Flux.Data$Warning == "Data error" , c("Rev.LR.f0")]  * Patm / (R * Concentration.Flux.Data$Temp.K *1e6) ;
Concentration.Flux.Data[Concentration.Flux.Data$Warning == "Data error" ,
]
Concentration.Flux.Data[Concentration.Flux.Data$Warning == "Data error" , c("Rev.LR.f0")]
Concentration.Flux.Data[Concentration.Flux.Data$Warning == "Data error" , c("LR.f0.mol.min")] <-  Concentration.Flux.Data[Concentration.Flux.Data$Warning == "Data error" , c("Rev.LR.f0")]  * Patm / (R * Concentration.Flux.Data$Temp.K *1e6) ;
Concentration.Flux.Data[Concentration.Flux.Data$Warning == "Data error"
,]
str(Concentration.Flux.Data)
setwd(paste0("D:\\Felipe\\Current_Projects\\CCC Based Experiments\\" ,
"StrategicTillage_NitrogenLosses_OrganicCoverCrops\\DataAnalysis\\RCode\\GCResultsAnalysis\\"))
getwd()
Year = 2021
# Gas = "CO2"
#
# Gas = "N2O"
#
Gas = "CH4"
Concentration.Flux.Data <- read.csv( file = paste0("FluxDataAnalysisResults\\" ,
Gas, "_Concentration.Flux.Data_", Year , ".csv"))  ;
str(Concentration.Flux.Data)
R = 8.31446261815324
Patm = 101325
Concentration.Flux.Data$Temp.K <- 293.15 ;
Concentration.Flux.Data$f0.mol.min <- Concentration.Flux.Data$f0 * Patm / (R * Concentration.Flux.Data$Temp.K *1e6) ;
str(Concentration.Flux.Data)
Concentration.Flux.Data$LR.f0.mol.min <- Concentration.Flux.Data$LR.f0 * Patm / (R * Concentration.Flux.Data$Temp.K *1e6) ;
str(Concentration.Flux.Data)
Concentration.Flux.Data$LR.f0.mol.min <- Concentration.Flux.Data$LR.f0 * Patm / (R * Concentration.Flux.Data$Temp.K *1e6) ;
str(Concentration.Flux.Data)
Concentration.Flux.Data[Concentration.Flux.Data$Warning == "Data error" , c("LR.f0.mol.min")]
Concentration.Flux.Data[Concentration.Flux.Data$Warning == "Data error" , c("Rev.LR.f0")]
Concentration.Flux.Data$Temp.K
Concentration.Flux.Data[Concentration.Flux.Data$Warning == "Data error" , c("LR.f0.mol.min")] <-
Concentration.Flux.Data[Concentration.Flux.Data$Warning == "Data error" , c("Rev.LR.f0")]  *
Patm / (R * Concentration.Flux.Data[Concentration.Flux.Data$Warning == "Data error" , c("Temp.K")] *1e6) ;
str(Concentration.Flux.Data)
Concentration.Flux.Data$F.KgElement.Ha.day <- Concentration.Flux.Data$F.mol.min * 44.0095 * 1440 * 10000 / 1000 ;
Concentration.Flux.Data$F.KgElement.Ha.day <- Concentration.Flux.Data$f0.mol.min * 44.0095 * 1440 * 10000 / 1000 ;
Concentration.Flux.Data$F.KgSubstance.Ha.day <- Concentration.Flux.Data$f0.mol.min * 12.0107 * 1440 * 10000 / 1000 ;
str(Concentration.Flux.Data)
Concentration.Flux.Data$F.KgSubstance.Ha.day <- Concentration.Flux.Data$LR.f0.mol.min * 12.0107 * 1440 * 10000 / 1000 ;
Concentration.Flux.Data$F.KgElement.Ha.day <- Concentration.Flux.Data$f0.mol.min * 44.0095 * 1440 * 10000 / 1000 ;
Concentration.Flux.Data$F.KgSubstance.Ha.day <- Concentration.Flux.Data$LR.f0.mol.min * 12.0107 * 1440 * 10000 / 1000 ;
str(Concentration.Flux.Data)
Concentration.Flux.Data$f0.KgElement.Ha.day <- Concentration.Flux.Data$f0.mol.min * 44.0095 * 1440 * 10000 / 1000 ;
Concentration.Flux.Data$f0.KgSubstance.Ha.day <- Concentration.Flux.Data$LR.f0.mol.min * 12.0107 * 1440 * 10000 / 1000 ;
str(Concentration.Flux.Data)
Concentration.Flux.Data$f0.KgElement.Ha.day <- Concentration.Flux.Data$f0.mol.min * 44.0095 * 1440 * 10000 / 1000 ;
Concentration.Flux.Data$LR.f0.KgSubstance.Ha.day <- Concentration.Flux.Data$LR.f0.mol.min * 12.0107 * 1440 * 10000 / 1000 ;
str(Concentration.Flux.Data)
