}
View(PeakArea.results)
View(PeakArea.results)
##############################################################################################################
#
#
# Program to Analyze and plot GC data collected from Professor Lauren McPhillips Agilent 8890 Gas Chromatograph
#
#
#  Felipe Montes 2021/07/01
#
#
#
#
###############################################################################################################
###############################################################################################################
#                             Tell the program where the package libraries are stored
###############################################################################################################
#  Tell the program where the package libraries are  #####################
.libPaths("C:/Felipe/SotwareANDCoding/R_Library/library")  ;
###############################################################################################################
#                             Setting up working directory  Loading Packages and Setting up working directory
###############################################################################################################
#      set the working directory
# readClipboard() Willow Rock Spring\\SkyCap_SelectionTrial\\DataCollection") ;   #
"https://pennstateoffice365.sharepoint.com/:f:/s/StrategicTillageAndN2O/Ehl9Lh_gza5FiOtKIyDD7MQBOKFdFk6h_k4EEYEktWJUYw?e=uYLqL0"
#setwd("C:\\Felipe\\Willow_Project\\Willow_Experiments\\
###############################################################################################################
#                            Install the packages that are needed
###############################################################################################################
install.packages("tabulizer", dependencies = T)
library(tabulizer)
###############################################################################################################
#                            Install the packages that are needed
###############################################################################################################
install.packages("tabulizer", "tabulizerjars" , dependencies = T)
library(tabulizer)
library(tabulizerjars)
library(tabulizerjars)
library(tabulizer)
install.packages(c("tabulizer", "tabulizerjars"))
library(openxlsx)
library(lattice)
library(tabulizerjars)
library(rJava)
install.packages("rJava")
library(tabulizer)
library(png)
install.packages("png")
##############################################################################################################
#
#
# Program to Analyze and plot GC data collected from Professor Lauren McPhillips Agilent 8890 Gas Chromatograph
#
#
#  Felipe Montes 2021/07/01
#
#
#
#
###############################################################################################################
###############################################################################################################
#                             Tell the program where the package libraries are stored
###############################################################################################################
#  Tell the program where the package libraries are  #####################
.libPaths("C:/Felipe/SotwareANDCoding/R_Library/library")  ;
###############################################################################################################
#                             Setting up working directory  Loading Packages and Setting up working directory
###############################################################################################################
#      set the working directory
# readClipboard() Willow Rock Spring\\SkyCap_SelectionTrial\\DataCollection") ;   #
"https://pennstateoffice365.sharepoint.com/:f:/s/StrategicTillageAndN2O/Ehl9Lh_gza5FiOtKIyDD7MQBOKFdFk6h_k4EEYEktWJUYw?e=uYLqL0"
#setwd("C:\\Felipe\\Willow_Project\\Willow_Experiments\\
###############################################################################################################
#                            Install the packages that are needed
###############################################################################################################
#install.packages("tabulizer", "tabulizerjars" , dependencies = T)
###############################################################################################################
#                           load the libraries that are needed
###############################################################################################################
library(openxlsx)
library(lattice)
library(tabulizer)
###############################################################################################################
#                           Explore the files and directory and files with the data
###############################################################################################################
### Read the Directories where the GC data are stored
Directory.List<-list.files("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Data\\GCResults\\SummaryReport");
###############################################################################################################
#
# Directories, subdirectories and files are not always consistent, and some files and directories have no data
# Therefore A catalog with objects with valid data will be build and that will be the information base to
#extract the data
#
###############################################################################################################
# j=1
# k=1
####initialize the dataframe to collect all the directories, subdirectories and file names
File.Catalog.0<-data.frame( File.Name=character(), Directory=character());
#### Do a loop throughout the directories and collect all the file names
for (j in seq(1, length(Directory.List))){
Files.List<-list.files(paste0("C:\\Users\\frm10\\The Pennsylvania State University\\StrategicTillageAndN2O - Documents\\Data\\GCResults\\SummaryReport\\", Directory.List[j]) ) ;
## Select files that are ".csv" only
SummaryFile<-Files.List[grep("summaryreport.xlsx",Files.List)] ;
PeakareaFile<-Files.List[grep("peakareas.xlsx",Files.List)] ;
File.Catalog.1<-data.frame(File.Name=SummaryFile) ;
File.Catalog.2<-data.frame(File.Name=PeakareaFile) ;
File.Catalog.3<-rbind(File.Catalog.1,File.Catalog.2);
File.Catalog.3$Directory<-Directory.List[j]
File.Catalog<-rbind(File.Catalog.0,File.Catalog.3 ) ;
File.Catalog.0<-File.Catalog ;
}
## initialize the dataframe to collect all the data together
GC.All.Data.1<-data.frame(Sample.Name = character(),  Vial.number= integer(),  DateOfAnalysis = character(),  CH4.Area = double(), CO2.Area = double(),       N2O.Area = double(), Treatment = character() , BLOCK = integer(), CoverCrop = character(), Sampling.Time = integer(),  Treatment.F = factor(), BLOCK.F = factor(), CoverCrop.F = factor()) ;
###############################################################################################################
#                           Read all the   excel files in the directory
###############################################################################################################
## initialize the dataframe to collect all the data in the directory files
PeakArea.results.0<-data.frame(Sample.Name = character(), Vial.number = integer(), CH4.Area = double(), CO2.Area = double(), N2O.Area = double(), DateOfAnalysis = character(), AnalysisName = character() );
for (i in (seq(1, dim.data.frame(File.Catalog)[1]))) {
#i=24
PeakArea.results.1<-read.xlsx(paste0("C:\\Users\\frm10\\Downloads\\SummaryReport\\", File.Catalog[i,c("Directory")], "\\", File.Catalog[i,c("File.Name")] ), sheet=1, startRow=3, colNames=F, cols= c(1,2,4:6) );
names(PeakArea.results.1)<-c('Sample.Name' , 'Vial.number' , 'CH4.Area' , 'CO2.Area', 'N2O.Area' );
PeakArea.results.1$DateOfAnalysis<-File.Catalog[i,c("Directory")] ;
PeakArea.results.1$AnalysisName<-File.Catalog[i,c("File.Name")] ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
}
###############################################################################################################
#
#                               Organizing the data for visualization
#
###############################################################################################################
str(PeakArea.results)
i
View(PeakArea.results)
##############################################################################################################
#
#
# Program to Analyze and plot GC data collected from Professor Lauren McPhillips Agilent 8890 Gas Chromatograph
#
#
#  Felipe Montes 2021/07/01
#
#
#
#
###############################################################################################################
###############################################################################################################
#                             Tell the program where the package libraries are stored
###############################################################################################################
#  Tell the program where the package libraries are  #####################
.libPaths("C:/Felipe/SotwareANDCoding/R_Library/library")  ;
install.packages("openxlsx",  dependencies = T, lib="C:/Felipe/SotwareANDCoding/R_Library/library")
.libPaths("C:/Felipe/SotwareANDCoding/R_Library/library")  ;
install.packages("openxlsx",  dependencies = T, lib="C:/Felipe/SotwareANDCoding/R_Library/library")
.libPaths("D:/Felipe/SotwareANDCoding/R_Library/library")  ;
install.packages("openxlsx",  dependencies = T, lib="D:/Felipe/SotwareANDCoding/R_Library/library")
library(openxlsx)
readClipboard()
("D:\\Felipe\\CCC Based Experiments\\StrategicTillage_NitrogenLosses_OrganicCoverCrops\\Data\\GasChromatograph")
library(openxlsx)
library(lattice)
Report.PDF.1<-pdf_text(pdf=paste0(GCPDF.File.path,"\\",GCPDF.File.name)) ;
GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
GCPDF.File.name="2021027B3B4peakareas.pdf"
GCPDF.File.name="2021027B3B4peakareas.pdf"
Report.PDF.1<-pdf_text(pdf=paste0(GCPDF.File.path,"\\",GCPDF.File.name)) ;
library(openxlsx)
library(lattice)
library(pdftools)
library(stringr)
ReadGCReportPDF<-function(GCPDF.File.path, GCPDF.File.name ){
###############################################################################################################
#                           load the libraries that are needed
###############################################################################################################
library(openxlsx)
library(lattice)
library(pdftools)
library(stringr)
###############################################################################################################
#
# Inputs required by the function
#
#  1-> GCPDF.File.path = path to the file containing the Gas Cromatograph analysis report in pdf format
#
#  in the code below GCPDF.File=paste0(File.List.directory,"\\",PDF.Results.Files[1])
#
#    GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
#
#  2-> GCPDF.File.name= Name of the Gas Cromatograph analysis report in pdf format
#
#
#    GCPDF.File.name="2021027B3B4peakareas.pdf"
#
#
#
###############################################################################################################
# read the pdf file as a text
# Report.PDF.1<-pdf_text(pdf=paste0(File.List.directory,"\\",PDF.Results.Files[1])) ;
Report.PDF.1<-pdf_text(pdf=paste0(GCPDF.File.path,"\\",GCPDF.File.name)) ;
# str(Report.PDF.1)
# separate each page and each line using strsplit() and "\n" as he separation pattern
Report.PDF.2<-strsplit(x=Report.PDF.1,split="\n") ;
# str(Report.PDF.2)
# get the data from the list starting with page 1 [[1]]
Report.PDF.2[[1]] ;   str(Report.PDF.2[[1]]) ;
# get all the pages in one long character vector Report.PDF.3 by unlisting the list produced by Report.PDF.2
Report.PDF.3<-unlist(Report.PDF.2);
# remove all the blank components of the vector
# remove all the blank components of the vector
### in reg exp ^ means start of a string, and $ means end of a string. Subsequently, ^$ means empty or ""
# grep(pattern="^$",x=Report.PDF.3)
#
# grep(pattern="^$",x=Report.PDF.3, value=T)
#
# grep(pattern="^$",x=Report.PDF.3, value=T, invert=T)
Report.PDF.4<-grep(pattern="^$",x=Report.PDF.3, value=T, invert=T) ;
## Remove lines of the report that do not contain data
print(Report.PDF.4[1:4])
# [1] "Sequence Summary Report"
# [2] "                                   CH4            CO2            N2O"
# [3] "                                   Peak Area      Peak Area      Peak Area"
# [4] " 0PerSTD                 1    1    4.071          781.033        149.931"
#
Report.PDF.5<-grep(pattern="Koehle*|Sequence|CH4|Peak", x=Report.PDF.4, value=T, invert=T)
# # use  str_squish from the package stringr to get rid of the spaces between characters
#
# str_squish(Report.PDF.5[1])
#
#
# strsplit(str_squish(Report.PDF.5[1]), " ")[1]
#
#
# str(unlist(strsplit(str_squish(Report.PDF.5[1]), " ")[1]))
# # or even better  use strsplit to remove the the spaces between characters in character vectors
#
# strsplit(x=Report.PDF.5[1], split=c(" ", ""))
#
# strsplit(x=Report.PDF.5[5], split=c(" ", ""))
#
# str(strsplit(x=Report.PDF.5[80], split=c(" ", "")))
# even better
# strsplit(x=Report.PDF.5, split=c(" "))
Report.PDF.6<-strsplit(x=Report.PDF.5, split=c(" ")) ;
# str(Report.PDF.6) ; head(Report.PDF.6,3 )
### in regular  expressions "^" means start of a string, and $ means end of a string. Subsequently, ^$ means empty or ""
# grep(pattern="^$",x=Report.PDF.6[[1]])
#
# grep(pattern="^$",x=Report.PDF.6[[1]], value=T)
#
# grep(pattern="^$",x=Report.PDF.6[[1]], value=T, invert=T)
#
# ### using sapply to apply the grep function to all the elements in the Report.PDF.6 list
#
# lapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T))
#
# lapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T))[[1]]
#
# sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T))
#
# str(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))
#
# t(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))
Report.PDF.7<-data.frame(t(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))) ;
# Names of the pdf report columns c("Sample", "Position", "Vial", "CH4" , "CO2" , "N2O" )
names(Report.PDF.7)<-c("Sample.Name", "Position" , "Vial", "CH4" , "CO2" , "N2O" );
# head(Report.PDF.7)
######################### Add the sampling date and the processing date ####################
Report.PDF.7$File<-GCPDF.File.name ;
# head(Report.PDF.7)
### Get the sampling date from the file name
# head(Report.PDF.7$File)
# strsplit(x=Report.PDF.7$File, split=c("pea")) [[1]]
#  Testing and building this complex call based on sapply, strsplit and regmatches
# XXXX<-sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)
#
# regmatches(XXXX, regexpr("[[:digit:]]+",XXXX))
# regmatches(sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1),
#            regexpr("[[:digit:]]+",sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)));
#
Report.PDF.7$Sampling.Day<-regmatches(sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1),
regexpr("[[:digit:]]+",sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)));
Report.PDF.7$Sampling.Date<-as.Date(Report.PDF.7$Sampling.Day, format="%Y%M%d");
###### Get the Gas Chromatograph processing date
# grep(pattern="Koehle*", x=Report.PDF.4, value=T)[[1]]
#
# Report.PDF.DateLine<-strsplit(x=grep(pattern="Koehle*", x=Report.PDF.4, value=T)[[1]], split=c(" ", ""))[[1]] ;
#
# as.Date(Report.PDF.DateLine, format="%Y-%m-%d" )
#
# is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))
#
# !is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))
#
# Report.PDF.DateLine[!is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))]
#
# as.Date(Report.PDF.DateLine[!is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))])
Report.PDF.DateLine<-strsplit(x=grep(pattern="Koehle*", x=Report.PDF.4, value=T)[[1]], split=c(" ", ""))[[1]] ;
Report.PDF.7$GC.Date<-as.Date(Report.PDF.DateLine[!is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))]);
# remove all the intermediary objects that were used during the execution of the program
# ls() objects() ls()[!ls() %in% c("Report.PDF.7", "GCPDF.File.name" ,"GCPDF.File.path")]
#  rm(list=ls()[!ls() %in% c("Report.PDF.7", "GCPDF.File.name" ,"GCPDF.File.path")])
print(head(Report.PDF.7))
return(Report.PDF.7)
}
readClipboard()
source("D:\\Felipe\\CCC Based Experiments\\StrategicTillage_NitrogenLosses_OrganicCoverCrops\\DataAnalysis\\RCode\\GCResultsAnalysis\\ReadGCReportPDF.R")
readClipboard()
File.List("C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\GCResults2021")
list.files("C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\GCResults2021")
directoryList.2021<-list.files("C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\GCResults2021") ;
directoryList.2021[[1]]
directoryList.2021[1]
str(directoryList.2021)
directoryList.2021<-list.files("C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\GCResults2021") ;
directoryList.2021[[1]]
directoryList.2021<-list.files("C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\GCResults2021\\SummaryReport") ;
directoryList.2021[[1]]
list.files(directoryList.2021[[1]])
directoryList.2021.Path<-("C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\GCResults2021\\SummaryReport");
directoryList.2021<-list.files(directoryList.2021.Path) ;
list.files(directoryList.2021.Path)
list.files(directoryList.2021[[1]])
paste0(directoryList.2021.Path,directoryList.2021[[1]]
)
list.files(paste0(directoryList.2021.Path,directoryList.2021[[1]]))
paste0(directoryList.2021.Path,"\\",directoryList.2021[[1]])
list.files(paste0(directoryList.2021.Path,"\\",directoryList.2021[[1]]))
list.files(paste0(directoryList.2021.Path,"\\",directoryList.2021[[1]]))
File.List<-list.files(paste0(directoryList.2021.Path,"\\",directoryList.2021[[1]]))
File.List
[grep(".pdf", File.List)]
File.List[grep(".pdf", File.List)]
File.List
directoryList.2021.Path
File.List
directoryList.2021
paste0(directoryList.2021.Path,"\\",PDF.Files[1] )
PDF.Files<-File.List[grep(".pdf", File.List)] ;
PDF.Files
paste0(directoryList.2021.Path,"\\",PDF.Files[1] )
directoryList.2021.Path
paste0(directoryList.2021[[1]],"\\",PDF.Files[1] )
ReadGCReportPDF(GCPDF.File.path=directoryList.2021.Path, GCPDF.File.name=paste0(directoryList.2021[[1]],"\\",PDF.Files[1] ) )
PDF.Files
assign(paste0("GCAnalysis",PDF.Files[1]), ReadGCReportPDF(GCPDF.File.path=directoryList.2021.Path, GCPDF.File.name=paste0(directoryList.2021[[1]],"\\",PDF.Files[1] ) ))
paste0("GCAnalysis",PDF.Files[1])
paste0("GCAnalysis",PDF.Files[1])
GCAnalysis20210528summaryreport.pdf
directoryList.2021.Path<-("C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\GCResults2021\\SummaryReport");
directoryList.2021.Path
directoryList.2021
File.List<-list.files(paste0(directoryList.2021.Path,"\\",directoryList.2021[[2]]));
File.List
PDF.Files<-File.List[grep(".pdf", File.List)] ;
PDF.Files
assign(paste0("GCAnalysis",PDF.Files[1]), ReadGCReportPDF(GCPDF.File.path=directoryList.2021.Path, GCPDF.File.name=paste0(directoryList.2021[[1]],"\\",PDF.Files[1] ) ))
assign(paste0("GCAnalysis",PDF.Files[2]), ReadGCReportPDF(GCPDF.File.path=directoryList.2021.Path, GCPDF.File.name=paste0(directoryList.2021[[2]],"\\",PDF.Files[1] ) ))
View(`GCAnalysis20210601B1B2sample24-84summaryreport.pdf`)
View(`GCAnalysis20210601B1B2sample24-84summaryreport.pdf`)
PDF.Files
View(`GCAnalysis20210601B1B2sample24-84summaryreport.pdf`)
View(`GCAnalysis20210601B1B2sample24-84summaryreport.pdf`)
assign(paste0("GCAnalysis",PDF.Files[1]), ReadGCReportPDF(GCPDF.File.path=directoryList.2021.Path, GCPDF.File.name=paste0(directoryList.2021[[2]],"\\",PDF.Files[1] ) ))
assign(paste0("GCAnalysis",PDF.Files[2]), ReadGCReportPDF(GCPDF.File.path=directoryList.2021.Path, GCPDF.File.name=paste0(directoryList.2021[[2]],"\\",PDF.Files[2] ) ))
assign(paste0("GCAnalysis",PDF.Files[3]), ReadGCReportPDF(GCPDF.File.path=directoryList.2021.Path, GCPDF.File.name=paste0(directoryList.2021[[2]],"\\",PDF.Files[3] ) ))
directoryList.2021
Directory.List.2021<-list.files(directoryList.2021.Path) ;
Directory.List.2021.Path<-("C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\GCResults2021\\SummaryReport");
Directory.List.2021<-list.files(directoryList.2021.Path) ;
Directory.List.2021.Path
Directory.List.2021<-list.files(directoryList.2021.Path) ;
Directory.List.2021
i=1
list.files(paste0(directoryList.2021.Path,"\\",directoryList.2021[[i]]));
PDF.Files<-File.List[grep(".pdf", File.List)] ;
PDF.Files
i=1 ; j=1
for (i %in% Directory.List.2021) {
print(c(directoryList.2021[[i]], File.List[[j]]))
for (i in Directory.List.2021) {
File.List<-list.files(paste0(directoryList.2021.Path,"\\",directoryList.2021[[i]]));
for (j in File.List) {
#PDF.Files<-File.List[grep(".pdf", File.List[[j]])]
print(File.List[[j]])
}
print(directoryList.2021[[i]])
}
Directory.List.2021
directoryList.2021[[i]]
i=1 ; j=1
for (i in Directory.List.2021) {
File.List<-list.files(paste0(directoryList.2021.Path,"\\",Directory.List.2021[[i]]));
for (j in File.List) {
#PDF.Files<-File.List[grep(".pdf", File.List[[j]])]
print(File.List[[j]])
}
print(Directory.List.2021[[i]])
}
for (i in Directory.List.2021) {
File.List<-list.files(paste0(directoryList.2021.Path,"\\",Directory.List.2021[[i]]));
for (j in File.List) {
#PDF.Files<-File.List[grep(".pdf", File.List[[j]])]
print(File.List[[j]])
}
print(Directory.List.2021[[i]])
}
for (j in File.List) {
#PDF.Files<-File.List[grep(".pdf", File.List[[j]])]
print(File.List[[j]])
}
File.List
File.List[[j]]
Directory.List.2021[[i]]
Directory.List.2021
File.List<-list.files(paste0(directoryList.2021.Path,"\\",Directory.List.2021[[i]]))
for (i in Directory.List.2021) {
File.List<-list.files(paste0(Directory.List.2021.Path,"\\",Directory.List.2021[[i]]));
for (j in File.List) {
#PDF.Files<-File.List[grep(".pdf", File.List[[j]])]
print(File.List[[j]])
}
print(Directory.List.2021[[i]])
}
Directory.List.2021<-list.files(directoryList.2021.Path) ;
Directory.List.2021
File.List<-list.files(paste0(Directory.List.2021.Path,"\\",Directory.List.2021[[i]]));
Directory.List.2021<-list.files(Directory.List.2021.Path) ;
for (i in Directory.List.2021) {
File.List<-list.files(paste0(Directory.List.2021.Path,"\\",Directory.List.2021[[i]]));
for (j in File.List) {
#PDF.Files<-File.List[grep(".pdf", File.List[[j]])]
print(File.List[[j]])
}
print(Directory.List.2021[[i]])
}
File.List<-list.files(paste0(Directory.List.2021.Path,"\\",Directory.List.2021[[i]]));
Directory.List.2021<-list.files(Directory.List.2021.Path) ;
Directory.List.2021
Directory.List.2021
Directory.List.2021[[i]]
i=1
Directory.List.2021[[i]]
paste0(Directory.List.2021.Path,"\\",Directory.List.2021[[i]])
list.files(paste0(Directory.List.2021.Path,"\\",Directory.List.2021[[i]]))
Directory.List.2021<-list.files(Directory.List.2021.Path) ;
Directory.List.2021
File.List<-list.files(paste0(Directory.List.2021.Path,"\\",Directory.List.2021[[i]]));
File.List
File.List
File.List[grep(".pdf", File.List)]
print(File.List[[j]])
print(PDF.Files[[j]])
j=1
PDF.Files<-File.List[grep(".pdf", File.List)]
PDF.File
PDF.Files
print(PDF.Files[[j]])
print(Directory.List.2021[[i]])
print(Directory.List.2021[[i]], PDF.Files[[j]])
print(c(Directory.List.2021[[i]], PDF.Files[[j]]))
Directory.List.2021<-list.files(Directory.List.2021.Path) ;
for (i in Directory.List.2021) {
File.List<-list.files(paste0(Directory.List.2021.Path,"\\",Directory.List.2021[[i]]));
PDF.Files<-File.List[grep(".pdf", File.List)]
for (j in PDF.Files) {
print(c(Directory.List.2021[[i]], PDF.Files[[j]]))
}
print(Directory.List.2021[[i]])
}
File.List<-list.files(paste0(Directory.List.2021.Path,"\\",Directory.List.2021[[i]]));
list.files(paste0(Directory.List.2021.Path,"\\",Directory.List.2021[[i]]))
Directory.List.2021
Directory.List.2021
list.files(paste0(Directory.List.2021.Path,"\\",Directory.List.2021[[i]])
list.files(paste0(Directory.List.2021.Path,"\\",Directory.List.2021[[i]]))
Directory.List.2021[[i]]
i=1
paste0(Directory.List.2021.Path,"\\",Directory.List.2021[[i]])
list.files(paste0(Directory.List.2021.Path,"\\",Directory.List.2021[[i]]))
File.List<-list.files(paste0(Directory.List.2021.Path,"\\",Directory.List.2021[[i]]));
PDF.Files<-File.List[grep(".pdf", File.List)]
PDF.Files
PDF.Files
j=1
print(c(Directory.List.2021[[i]], PDF.Files[[j]]))
Directory.List.2021<-list.files(Directory.List.2021.Path) ;
for (i in Directory.List.2021) {
File.List<-list.files(paste0(Directory.List.2021.Path,"\\",Directory.List.2021[[i]]));
PDF.Files<-File.List[grep(".pdf", File.List)]
for (j in PDF.Files) {
print(c(Directory.List.2021[[i]], PDF.Files[[j]]))
}
}
Directory.List.2021[[i]]
Directory.List.2021
File.List<-list.files(paste0(Directory.List.2021.Path,"\\",Directory.List.2021[[i]]))
list.files(paste0(Directory.List.2021.Path,"\\",Directory.List.2021[[i]]))
for (i in Directory.List.2021) {
print(Directory.List.2021[[i]])
}
Directory.List.2021[i]
for (i in Directory.List.2021) {
print(Directory.List.2021[i])
}
Directory.List.2021<-list.files(Directory.List.2021.Path) ;
Directory.List.2021
i %in% Directory.List.2021
for (i in Directory.List.2021) {
print(i)
}
