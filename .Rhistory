# lapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T))[[1]]
#
# sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T))
#
# str(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))
#
# t(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))
Report.PDF.7<-data.frame(t(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))) ;
Report.PDF.7<-data.frame(t(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))) ;
# Names of the pdf report columns c("Sample", "Position", "Vial", "CH4" , "CO2" , "N2O" )
names(Report.PDF.7)<-c("Sample.Name", "Position" , "Vial", "CH4" , "CO2" , "N2O" );
# head(Report.PDF.7)
######################### Add the sampling date and the processing date ####################
Report.PDF.7$File<-GCPDF.File.name ;
# head(Report.PDF.7)
### Get the sampling date from the file name
# head(Report.PDF.7$File)
# strsplit(x=Report.PDF.7$File, split=c("pea")) [[1]]
#  Testing and building this complex call based on sapply, strsplit and regmatches
# XXXX<-sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)
#
# regmatches(XXXX, regexpr("[[:digit:]]+",XXXX))
# regmatches(sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1),
#            regexpr("[[:digit:]]+",sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)));
#
Report.PDF.7$Sampling.Day<-regmatches(sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1),
regexpr("[[:digit:]]+",sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)));
Report.PDF.7$Sampling.Date<-as.Date(Report.PDF.7$Sampling.Day, format="%Y%M%d");
###### Get the Gas Chromatograph processing date
# grep(pattern="Koehle*", x=Report.PDF.4, value=T)[[1]]
#
# Report.PDF.DateLine<-strsplit(x=grep(pattern="Koehle*", x=Report.PDF.4, value=T)[[1]], split=c(" ", ""))[[1]] ;
#
# as.Date(Report.PDF.DateLine, format="%Y-%m-%d" )
#
# is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))
#
# !is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))
#
# Report.PDF.DateLine[!is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))]
#
# as.Date(Report.PDF.DateLine[!is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))])
Report.PDF.DateLine<-strsplit(x=grep(pattern="Koehle*", x=Report.PDF.4, value=T)[[1]], split=c(" ", ""))[[1]] ;
Report.PDF.7$GC.Date<-as.Date(Report.PDF.DateLine[!is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))]);
# remove all the intermediary objects that were used during the execution of the program
# ls() objects() ls()[!ls() %in% c("Report.PDF.7", "GCPDF.File.name" ,"GCPDF.File.path")]
#  rm(list=ls()[!ls() %in% c("Report.PDF.7", "GCPDF.File.name" ,"GCPDF.File.path")])
print(head(Report.PDF.7))
return(Report.PDF.7)
}
readClipboard()
source(file = "D:\\Felipe\\Current_Projects\\CCC Based Experiments\\StrategicTillage_NitrogenLosses_OrganicCoverCrops\\DataAnalysis\\RCode\\GCResultsAnalysis\\ReadGCReportPDF2021.R", verbose =T)
File.List.directory<-"C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results" ;
File.List<-list.files("C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"); length(File.List) ;
PDF.Results.Files <- File.List[grep(".pdf", File.List)] ;
Excel.Results.Files <-File.List[grep(".xlsx", File.List)] ;
PeakArea.results.0<-data.frame(Sample.Name = character(), Position = integer() , Vial.number = integer(),
CH4.Area = double(), CO2.Area = double(), N2O.Area = double(), File = character(),
Sampling.Day = character(),  DateOfAnalysis = character(), AnalysisName = character() );
for (i in seq(1,length(PDF.Results.Files))) {
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = PDF.Results.Files[i])
#names(PeakArea.results.1)<-c('Sample.Name' , 'Vial.number' , 'CH4.Area' , 'CO2.Area', 'N2O.Area' );
PeakArea.results.1$AnalysisName<-PDF.Results.Files[[i]] ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
# Delete objects and files that are not longer needed
rm(PeakArea.results.1)
}
i
for (i in seq(42,length(PDF.Results.Files))) {
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = PDF.Results.Files[i])
#names(PeakArea.results.1)<-c('Sample.Name' , 'Vial.number' , 'CH4.Area' , 'CO2.Area', 'N2O.Area' );
PeakArea.results.1$AnalysisName<-PDF.Results.Files[[i]] ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
# Delete objects and files that are not longer needed
rm(PeakArea.results.1)
}
i
length(PDF.Results.Files)
for (i in seq(43,length(PDF.Results.Files))) {
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = PDF.Results.Files[i])
#names(PeakArea.results.1)<-c('Sample.Name' , 'Vial.number' , 'CH4.Area' , 'CO2.Area', 'N2O.Area' );
PeakArea.results.1$AnalysisName<-PDF.Results.Files[[i]] ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
# Delete objects and files that are not longer needed
rm(PeakArea.results.1)
}
i
PDF.Results.Files[[i]]
i=41
PDF.Results.Files[[i]]
i=42
PDF.Results.Files[[i]]
i=43
PDF.Results.Files[[i]]
i=44
PDF.Results.Files[[i]]
i=45
PDF.Results.Files[[i]]
PDF.Results.Files <- File.List[grep(".pdf", File.List)]
PDF.Results.Files
c(1:40, 42:45)
PDF.Results.Files <- PDF.Results.Files.1[c(1:40, 42:45)] ;
PDF.Results.Files.1 <- File.List[grep(".pdf", File.List)] ;
PDF.Results.Files <- PDF.Results.Files.1[c(1:40, 42:45)] ;
PDF.Results.Files
PDF.Results.Files <- PDF.Results.Files.1[c(1:40, 42:44)] ;
PDF.Results.Files
source("D:/Felipe/Current_Projects/CCC Based Experiments/StrategicTillage_NitrogenLosses_OrganicCoverCrops/DataAnalysis/RCode/GCResultsAnalysis/GCResultsCompilation2021.R", echo=TRUE)
.libPaths("C:\\Users\\frm10\\AppData\\Local\\R\\win-library\\4.2")  ;
library(openxlsx)
library(lattice)
library(pdftools)
library(stringr)
source(file = "D:\\Felipe\\Current_Projects\\CCC Based Experiments\\StrategicTillage_NitrogenLosses_OrganicCoverCrops\\DataAnalysis\\RCode\\GCResultsAnalysis\\ReadGCReportPDF2021.R", verbose =T)
File.List.directory<-"C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results" ;
File.List<-list.files("C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"); length(File.List) ;
PDF.Results.Files.1 <- File.List[grep(".pdf", File.List)] ;
PDF.Results.Files <- PDF.Results.Files.1[c(1:40, 42:44)] ;
PeakArea.results.0<-data.frame(Sample.Name = character(), Position = integer() , Vial.number = integer(),
CH4.Area = double(), CO2.Area = double(), N2O.Area = double(), File = character(),
Sampling.Day = character(),  DateOfAnalysis = character(), AnalysisName = character() );
for (i in seq(43,length(PDF.Results.Files))) {
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = PDF.Results.Files[i])
#names(PeakArea.results.1)<-c('Sample.Name' , 'Vial.number' , 'CH4.Area' , 'CO2.Area', 'N2O.Area' );
PeakArea.results.1$AnalysisName<-PDF.Results.Files[[i]] ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
# Delete objects and files that are not longer needed
rm(PeakArea.results.1)
}
str(PeakArea.results.0)
i=1
PDF.Results.Files[[i]]
i=1
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = PDF.Results.Files[i])
i
PDF.Results.Files
i = PDF.Results.Files[1]
i
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = i)
PeakArea.results.1$AnalysisName <- i ;
.libPaths("C:\\Users\\frm10\\AppData\\Local\\R\\win-library\\4.2")  ;
library(openxlsx)
library(lattice)
library(pdftools)
library(stringr)
source(file = "D:\\Felipe\\Current_Projects\\CCC Based Experiments\\StrategicTillage_NitrogenLosses_OrganicCoverCrops\\DataAnalysis\\RCode\\GCResultsAnalysis\\ReadGCReportPDF2021.R", verbose =T)
File.List.directory<-"C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results" ;
File.List<-list.files("C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"); length(File.List) ;
PDF.Results.Files.1 <- File.List[grep(".pdf", File.List)] ;
PDF.Results.Files <- PDF.Results.Files.1[c(1:40, 42:44)] ;
PDF.Results.Files
PDF.Results.Files.1
PDF.Results.Files.1
PDF.Results.Files.1[41]
PDF.Results.Files.1[40]
PDF.Results.Files.1[45]
PDF.Results.Files.1 <- File.List[grep(".pdf", File.List)] ;
PDF.Results.Files <- PDF.Results.Files.1[c(1:39, 40:44)] ;
PeakArea.results.0<-data.frame(Sample.Name = character(), Position = integer() , Vial.number = integer(),
CH4.Area = double(), CO2.Area = double(), N2O.Area = double(), File = character(),
Sampling.Day = character(),  DateOfAnalysis = character(), AnalysisName = character() );
for (i in PDF.Results.Files) {
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = i)
#names(PeakArea.results.1)<-c('Sample.Name' , 'Vial.number' , 'CH4.Area' , 'CO2.Area', 'N2O.Area' );
PeakArea.results.1$AnalysisName <- i ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
# Delete objects and files that are not longer needed
rm(PeakArea.results.1)
}
i
PDF.Results.Files.1 <- File.List[grep(".pdf", File.List)] ;
PDF.Results.Files <- PDF.Results.Files.1[c(1:39, 40:44)] ;
PeakArea.results.0<-data.frame(Sample.Name = character(), Position = integer() , Vial.number = integer(),
CH4.Area = double(), CO2.Area = double(), N2O.Area = double(), File = character(),
Sampling.Day = character(),  DateOfAnalysis = character(), AnalysisName = character() );
i = PDF.Results.Files[1]
i
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = i)
PeakArea.results.1
PeakArea.results.1$AnalysisName <- i ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
rm(PeakArea.results.1)
PeakArea.results.0
.libPaths("C:\\Users\\frm10\\AppData\\Local\\R\\win-library\\4.2")  ;
library(openxlsx)
library(lattice)
library(pdftools)
library(stringr)
source(file = "D:\\Felipe\\Current_Projects\\CCC Based Experiments\\StrategicTillage_NitrogenLosses_OrganicCoverCrops\\DataAnalysis\\RCode\\GCResultsAnalysis\\ReadGCReportPDF2021.R", verbose =T)
File.List.directory<-"C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results" ;
File.List<-list.files("C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"); length(File.List) ;
PDF.Results.Files.1 <- File.List[grep(".pdf", File.List)] ;
PDF.Results.Files <- PDF.Results.Files.1[c(1:39, 40:44)] ;
PeakArea.results.0<-data.frame(Sample.Name = character(), Position = integer() , Vial.number = integer(),
CH4.Area = double(), CO2.Area = double(), N2O.Area = double(), File = character(),
Sampling.Day = character(),  DateOfAnalysis = character(), AnalysisName = character() );
for (i in PDF.Results.Files) {
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = i)
#names(PeakArea.results.1)<-c('Sample.Name' , 'Vial.number' , 'CH4.Area' , 'CO2.Area', 'N2O.Area' );
PeakArea.results.1$AnalysisName <- i ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
# Delete objects and files that are not longer needed
rm(PeakArea.results.1)
}
i
PDF.Results.Files
PDF.Results.Files.1 <- File.List[grep(".pdf", File.List)] ;
PDF.Results.Files.1
PDF.Results.Files.1[40]
PDF.Results.Files.1[45]
PDF.Results.Files <- PDF.Results.Files.1[c(1:39, 41:44)] ;
PeakArea.results.0<-data.frame(Sample.Name = character(), Position = integer() , Vial.number = integer(),
CH4.Area = double(), CO2.Area = double(), N2O.Area = double(), File = character(),
Sampling.Day = character(),  DateOfAnalysis = character(), AnalysisName = character() );
for (i in PDF.Results.Files) {
PeakArea.results.1<-ReadGCReportPDF2021(GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
, GCPDF.File.name = i)
#names(PeakArea.results.1)<-c('Sample.Name' , 'Vial.number' , 'CH4.Area' , 'CO2.Area', 'N2O.Area' );
PeakArea.results.1$AnalysisName <- i ;
PeakArea.results<-rbind(PeakArea.results.0,PeakArea.results.1 );
PeakArea.results.0<-PeakArea.results ;
# Delete objects and files that are not longer needed
rm(PeakArea.results.1)
}
str(PeakArea.results.0)
library(openxlsx)
library(lattice)
library(pdftools)
library(stringr)
Report.PDF.1<-pdf_text(pdf=paste0(GCPDF.File.path,"\\",GCPDF.File.name)) ;
GCPDF.File.path = "C:\\Users\\frm10\\OneDrive - The Pennsylvania State University\\GCResults\\Alli_Felipe2021\\Results"
GCPDF.File.name="20210929B1B2peakareas1.pdf"
Report.PDF.1<-pdf_text(pdf=paste0(GCPDF.File.path,"\\",GCPDF.File.name)) ;
Report.PDF.2<-strsplit(x=Report.PDF.1,split="\n") ;
Report.PDF.2[[1]] ;   str(Report.PDF.2[[1]]) ;
Report.PDF.3<-unlist(Report.PDF.2);
Report.PDF.4<-grep(pattern="^$",x=Report.PDF.3, value=T, invert=T) ;
print(Report.PDF.4[1:4])
Report.PDF.5<-grep(pattern="Koehle*|Sequence|CH4|Peak", x=Report.PDF.4, value=T, invert=T)
Report.PDF.6<-strsplit(x=Report.PDF.5, split=c(" ")) ;
Report.PDF.7<-data.frame(t(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))) ;
Report.PDF.7<-data.frame(t(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))) ;
names(Report.PDF.7)<-c("Sample.Name", "Position" , "Vial", "CH4" , "CO2" , "N2O" );
Report.PDF.7$File<-GCPDF.File.name ;
Report.PDF.7$Sampling.Day<-regmatches(sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1),
regexpr("[[:digit:]]+",sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)));
regmatches(sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1),
regexpr("[[:digit:]]+",sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)));
as.Date(Report.PDF.7$Sampling.Day, format="%Y%M%d")
ReadGCReportPDF2021<-function(GCPDF.File.path, GCPDF.File.name ){
# read the pdf file as a text
# Report.PDF.1<-pdf_text(pdf=paste0(File.List.directory,"\\",PDF.Results.Files[1])) ;
Report.PDF.1<-pdf_text(pdf=paste0(GCPDF.File.path,"\\",GCPDF.File.name)) ;
# str(Report.PDF.1)
# separate each page and each line using strsplit() and "\n" as the separation pattern
Report.PDF.2<-strsplit(x=Report.PDF.1,split="\n") ;
# str(Report.PDF.2)
# get the data from the list starting with page 1 [[1]]
Report.PDF.2[[1]] ;   str(Report.PDF.2[[1]]) ;
# get all the pages in one long character vector Report.PDF.3 by unlisting the list produced by Report.PDF.2
Report.PDF.3<-unlist(Report.PDF.2);
# remove all the blank components of the vector
# remove all the blank components of the vector
### in reg exp ^ means start of a string, and $ means end of a string. Subsequently, ^$ means empty or ""
# grep(pattern="^$",x=Report.PDF.3)
#
# grep(pattern="^$",x=Report.PDF.3, value=T)
#
# grep(pattern="^$",x=Report.PDF.3, value=T, invert=T)
Report.PDF.4<-grep(pattern="^$",x=Report.PDF.3, value=T, invert=T) ;
## Remove lines of the report that do not contain data
print(Report.PDF.4[1:4])
# [1] "Sequence Summary Report"
# [2] "                                   CH4            CO2            N2O"
# [3] "                                   Peak Area      Peak Area      Peak Area"
# [4] " 0PerSTD                 1    1    4.071          781.033        149.931"
#
Report.PDF.5<-grep(pattern="Koehle*|Sequence|CH4|Peak", x=Report.PDF.4, value=T, invert=T)
# # use  str_squish from the package stringr to get rid of the spaces between characters
#
# str_squish(Report.PDF.5[1])
#
#
# strsplit(str_squish(Report.PDF.5[1]), " ")[1]
#
#
# str(unlist(strsplit(str_squish(Report.PDF.5[1]), " ")[1]))
# # or even better  use strsplit to remove the the spaces between characters in character vectors
#
# strsplit(x=Report.PDF.5[1], split=c(" ", ""))
#
# strsplit(x=Report.PDF.5[5], split=c(" ", ""))
#
# str(strsplit(x=Report.PDF.5[80], split=c(" ", "")))
# even better
# strsplit(x=Report.PDF.5, split=c(" "))
Report.PDF.6<-strsplit(x=Report.PDF.5, split=c(" ")) ;
# str(Report.PDF.6) ; head(Report.PDF.6,3 )
### in regular  expressions "^" means start of a string, and $ means end of a string. Subsequently, ^$ means empty or ""
# grep(pattern="^$",x=Report.PDF.6[[1]])
#
# grep(pattern="^$",x=Report.PDF.6[[1]], value=T)
#
# grep(pattern="^$",x=Report.PDF.6[[1]], value=T, invert=T)
#
# ### using sapply to apply the grep function to all the elements in the Report.PDF.6 list
#
# lapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T))
#
# lapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T))[[1]]
#
# sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T))
#
# str(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))
#
# t(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))
Report.PDF.7<-data.frame(t(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))) ;
Report.PDF.7<-data.frame(t(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))) ;
# Names of the pdf report columns c("Sample", "Position", "Vial", "CH4" , "CO2" , "N2O" )
names(Report.PDF.7)<-c("Sample.Name", "Position" , "Vial", "CH4" , "CO2" , "N2O" );
# head(Report.PDF.7)
######################### Add the sampling date and the processing date ####################
Report.PDF.7$File<-GCPDF.File.name ;
# head(Report.PDF.7)
### Get the sampling date from the file name
# head(Report.PDF.7$File)
# strsplit(x=Report.PDF.7$File, split=c("pea")) [[1]]
#  Testing and building this complex call based on sapply, strsplit and regmatches
# XXXX<-sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)
#
# regmatches(XXXX, regexpr("[[:digit:]]+",XXXX))
# regmatches(sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1),
#            regexpr("[[:digit:]]+",sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)));
#
Report.PDF.7$Sampling.Day<-regmatches(sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1),
regexpr("[[:digit:]]+",sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)));
Report.PDF.7$Sampling.Date<-as.Date(Report.PDF.7$Sampling.Day, format="%Y%M%d");
###### Get the Gas Chromatograph processing date
# grep(pattern="Koehle*", x=Report.PDF.4, value=T)[[1]]
#
# Report.PDF.DateLine<-strsplit(x=grep(pattern="Koehle*", x=Report.PDF.4, value=T)[[1]], split=c(" ", ""))[[1]] ;
#
# as.Date(Report.PDF.DateLine, format="%Y-%m-%d" )
#
# is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))
#
# !is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))
#
# Report.PDF.DateLine[!is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))]
#
# as.Date(Report.PDF.DateLine[!is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))])
Report.PDF.DateLine<-strsplit(x=grep(pattern="Koehle*", x=Report.PDF.4, value=T)[[1]], split=c(" ", ""))[[1]] ;
Report.PDF.7$GC.Date<-as.Date(Report.PDF.DateLine[!is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))]);
# remove all the intermediary objects that were used during the execution of the program
# ls() objects() ls()[!ls() %in% c("Report.PDF.7", "GCPDF.File.name" ,"GCPDF.File.path")]
#  rm(list=ls()[!ls() %in% c("Report.PDF.7", "GCPDF.File.name" ,"GCPDF.File.path")])
print(head(Report.PDF.7))
return(Report.PDF.7)
}
GCPDF.File.name="20210812B3B4peakareas2.pdf"
Report.PDF.1<-pdf_text(pdf=paste0(GCPDF.File.path,"\\",GCPDF.File.name)) ;
Report.PDF.2<-strsplit(x=Report.PDF.1,split="\n") ;
Report.PDF.2[[1]] ;   str(Report.PDF.2[[1]]) ;
Report.PDF.3<-unlist(Report.PDF.2);
Report.PDF.4<-grep(pattern="^$",x=Report.PDF.3, value=T, invert=T) ;
print(Report.PDF.4[1:4])
Report.PDF.5<-grep(pattern="Koehle*|Sequence|CH4|Peak", x=Report.PDF.4, value=T, invert=T)
Report.PDF.6<-strsplit(x=Report.PDF.5, split=c(" ")) ;
Report.PDF.7<-data.frame(t(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))) ;
Report.PDF.7<-data.frame(t(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))) ;
names(Report.PDF.7)<-c("Sample.Name", "Position" , "Vial", "CH4" , "CO2" , "N2O" );
Report.PDF.7$File<-GCPDF.File.name ;
Report.PDF.7$Sampling.Day<-regmatches(sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1),
regexpr("[[:digit:]]+",sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)));
as.Date(Report.PDF.7$Sampling.Day, format="%Y%M%d")
regmatches(sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1),
regexpr("[[:digit:]]+",sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)));
Report.PDF.7$Sampling.Day
as.Date(Report.PDF.7$Sampling.Day, format="%Y%m%d")
Report.PDF.7$Sampling.Date<-as.Date(Report.PDF.7$Sampling.Day, format="%Y%m%d");
Report.PDF.7$Sampling.Date
library(openxlsx)
library(lattice)
library(pdftools)
library(stringr)
ReadGCReportPDF2021<-function(GCPDF.File.path, GCPDF.File.name ){
# read the pdf file as a text
# Report.PDF.1<-pdf_text(pdf=paste0(File.List.directory,"\\",PDF.Results.Files[1])) ;
Report.PDF.1<-pdf_text(pdf=paste0(GCPDF.File.path,"\\",GCPDF.File.name)) ;
# str(Report.PDF.1)
# separate each page and each line using strsplit() and "\n" as the separation pattern
Report.PDF.2<-strsplit(x=Report.PDF.1,split="\n") ;
# str(Report.PDF.2)
# get the data from the list starting with page 1 [[1]]
Report.PDF.2[[1]] ;   str(Report.PDF.2[[1]]) ;
# get all the pages in one long character vector Report.PDF.3 by unlisting the list produced by Report.PDF.2
Report.PDF.3<-unlist(Report.PDF.2);
# remove all the blank components of the vector
# remove all the blank components of the vector
### in reg exp ^ means start of a string, and $ means end of a string. Subsequently, ^$ means empty or ""
# grep(pattern="^$",x=Report.PDF.3)
#
# grep(pattern="^$",x=Report.PDF.3, value=T)
#
# grep(pattern="^$",x=Report.PDF.3, value=T, invert=T)
Report.PDF.4<-grep(pattern="^$",x=Report.PDF.3, value=T, invert=T) ;
## Remove lines of the report that do not contain data
print(Report.PDF.4[1:4])
# [1] "Sequence Summary Report"
# [2] "                                   CH4            CO2            N2O"
# [3] "                                   Peak Area      Peak Area      Peak Area"
# [4] " 0PerSTD                 1    1    4.071          781.033        149.931"
#
Report.PDF.5<-grep(pattern="Koehle*|Sequence|CH4|Peak", x=Report.PDF.4, value=T, invert=T)
# # use  str_squish from the package stringr to get rid of the spaces between characters
#
# str_squish(Report.PDF.5[1])
#
#
# strsplit(str_squish(Report.PDF.5[1]), " ")[1]
#
#
# str(unlist(strsplit(str_squish(Report.PDF.5[1]), " ")[1]))
# # or even better  use strsplit to remove the the spaces between characters in character vectors
#
# strsplit(x=Report.PDF.5[1], split=c(" ", ""))
#
# strsplit(x=Report.PDF.5[5], split=c(" ", ""))
#
# str(strsplit(x=Report.PDF.5[80], split=c(" ", "")))
# even better
# strsplit(x=Report.PDF.5, split=c(" "))
Report.PDF.6<-strsplit(x=Report.PDF.5, split=c(" ")) ;
# str(Report.PDF.6) ; head(Report.PDF.6,3 )
### in regular  expressions "^" means start of a string, and $ means end of a string. Subsequently, ^$ means empty or ""
# grep(pattern="^$",x=Report.PDF.6[[1]])
#
# grep(pattern="^$",x=Report.PDF.6[[1]], value=T)
#
# grep(pattern="^$",x=Report.PDF.6[[1]], value=T, invert=T)
#
# ### using sapply to apply the grep function to all the elements in the Report.PDF.6 list
#
# lapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T))
#
# lapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T))[[1]]
#
# sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T))
#
# str(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))
#
# t(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))
Report.PDF.7<-data.frame(t(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))) ;
Report.PDF.7<-data.frame(t(sapply(Report.PDF.6, function(x) grep(pattern="^$",x, value=T, invert=T)))) ;
# Names of the pdf report columns c("Sample", "Position", "Vial", "CH4" , "CO2" , "N2O" )
names(Report.PDF.7)<-c("Sample.Name", "Position" , "Vial", "CH4" , "CO2" , "N2O" );
# head(Report.PDF.7)
######################### Add the sampling date and the processing date ####################
Report.PDF.7$File<-GCPDF.File.name ;
# head(Report.PDF.7)
### Get the sampling date from the file name
# head(Report.PDF.7$File)
# strsplit(x=Report.PDF.7$File, split=c("pea")) [[1]]
#  Testing and building this complex call based on sapply, strsplit and regmatches
# XXXX<-sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)
#
# regmatches(XXXX, regexpr("[[:digit:]]+",XXXX))
# regmatches(sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1),
#            regexpr("[[:digit:]]+",sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)));
#
Report.PDF.7$Sampling.Day<-regmatches(sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1),
regexpr("[[:digit:]]+",sapply(strsplit(x=Report.PDF.7$File, split=c("pea")), FUN="[[",1)));
Report.PDF.7$Sampling.Date<-as.Date(Report.PDF.7$Sampling.Day, format="%Y%m%d");
###### Get the Gas Chromatograph processing date
# grep(pattern="Koehle*", x=Report.PDF.4, value=T)[[1]]
#
# Report.PDF.DateLine<-strsplit(x=grep(pattern="Koehle*", x=Report.PDF.4, value=T)[[1]], split=c(" ", ""))[[1]] ;
#
# as.Date(Report.PDF.DateLine, format="%Y-%m-%d" )
#
# is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))
#
# !is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))
#
# Report.PDF.DateLine[!is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))]
#
# as.Date(Report.PDF.DateLine[!is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))])
Report.PDF.DateLine<-strsplit(x=grep(pattern="Koehle*", x=Report.PDF.4, value=T)[[1]], split=c(" ", ""))[[1]] ;
Report.PDF.7$GC.Date<-as.Date(Report.PDF.DateLine[!is.na(as.Date(Report.PDF.DateLine, format="%Y-%m-%d" ))]);
# remove all the intermediary objects that were used during the execution of the program
# ls() objects() ls()[!ls() %in% c("Report.PDF.7", "GCPDF.File.name" ,"GCPDF.File.path")]
#  rm(list=ls()[!ls() %in% c("Report.PDF.7", "GCPDF.File.name" ,"GCPDF.File.path")])
print(head(Report.PDF.7))
return(Report.PDF.7)
}
Report.PDF.7
